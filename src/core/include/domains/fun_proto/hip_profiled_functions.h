/** THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY THE GILDA TOOL.
 * DO NOT MODIFY UNLESS YOU KNOW WHAT YOU ARE DOING.
 * ANY CHANGES MAY BE OVERWRITTEN BY SUBSEQUENT RUNS OF GILDA. 
 */
 

#ifndef HIP_PROFILED_FUNCTIONS_H 
#define HIP_PROFILED_FUNCTIONS_H 

#include "hip/hip_runtime.h" 

// HIP API Function Prototype
hipError_t i_hipGraphMemsetNodeGetParams(hipGraphNode_t node, hipMemsetParams * pNodeParams);
hipError_t i_hipWaitExternalSemaphoresAsync(const hipExternalSemaphore_t * extSemArray, const hipExternalSemaphoreWaitParams * paramsArray, unsigned int numExtSems, hipStream_t stream);
hipError_t i_hipDrvPointerGetAttributes(unsigned int numAttributes, hipPointer_attribute * attributes, void ** data, hipDeviceptr_t ptr);
hipError_t i_hipExtStreamGetCUMask(hipStream_t stream, uint32_t cuMaskSize, uint32_t * cuMask);
hipError_t i_hipMemset_spt(void * dst, int value, size_t sizeBytes);
hipError_t i_hipCtxSynchronize();
hipError_t i_hipMemGetAddressRange(hipDeviceptr_t * pbase, size_t * psize, hipDeviceptr_t dptr);
hipError_t i_hipMallocHost(void ** ptr, size_t size);
hipError_t i_hipMemAddressReserve(void ** ptr, size_t size, size_t alignment, void * addr, unsigned long long flags);
hipError_t i_hipStreamEndCapture(hipStream_t stream, hipGraph_t * pGraph);
hipError_t i_hipGraphExecExternalSemaphoresWaitNodeSetParams(hipGraphExec_t hGraphExec, hipGraphNode_t hNode, const hipExternalSemaphoreWaitNodeParams * nodeParams);
hipError_t i_hipStreamQuery_spt(hipStream_t stream);
hipError_t i_hipStreamCreateWithFlags(hipStream_t * stream, unsigned int flags);
hipError_t i_hipMemGetAllocationGranularity(size_t * granularity, const hipMemAllocationProp * prop, hipMemAllocationGranularity_flags option);
hipError_t i_hipProfilerStop();
const char * i_hipGetErrorString(hipError_t hipError);
hipError_t i_hipGetDeviceFlags(unsigned int * flags);
hipError_t i_hipGetTextureObjectResourceDesc(hipResourceDesc * pResDesc, hipTextureObject_t textureObject);
hipError_t i_hipMemcpyPeerAsync(void * dst, int dstDeviceId, const void * src, int srcDevice, size_t sizeBytes, hipStream_t stream);
hipError_t i_hipTexRefGetFormat(hipArray_Format * pFormat, int * pNumChannels, const textureReference * texRef);
hipError_t i_hipLaunchKernel(const void * function_address, dim3 numBlocks, dim3 dimBlocks, void ** args, size_t sharedMemBytes, hipStream_t stream);
hipError_t i_hipGraphHostNodeGetParams(hipGraphNode_t node, hipHostNodeParams * pNodeParams);
hipError_t i_hipCtxGetSharedMemConfig(hipSharedMemConfig * pConfig);
hipError_t i_hipMemcpy2DToArray(hipArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind);
hipError_t i_hipMemcpyFromSymbolAsync(void * dst, const void * symbol, size_t sizeBytes, size_t offset, hipMemcpyKind kind, hipStream_t stream);
hipError_t i_hipGraphKernelNodeSetAttribute(hipGraphNode_t hNode, hipLaunchAttributeID attr, const hipLaunchAttributeValue * value);
hipError_t i_hipMemPoolSetAttribute(hipMemPool_t mem_pool, hipMemPoolAttr attr, void * value);
hipError_t i_hipEventRecord_spt(hipEvent_t event, hipStream_t stream);
hipError_t i_hipExtLaunchKernel(const void * function_address, dim3 numBlocks, dim3 dimBlocks, void ** args, size_t sharedMemBytes, hipStream_t stream, hipEvent_t startEvent, hipEvent_t stopEvent, int flags);
hipError_t i_hipGraphExecMemcpyNodeSetParamsToSymbol(hipGraphExec_t hGraphExec, hipGraphNode_t node, const void * symbol, const void * src, size_t count, size_t offset, hipMemcpyKind kind);
hipError_t i_hipDevicePrimaryCtxGetState(hipDevice_t dev, unsigned int * flags, int * active);
hipError_t i_hipGetSymbolSize(size_t * size, const void * symbol);
hipError_t i_hipDestroyExternalMemory(hipExternalMemory_t extMem);
hipError_t i_hipGetProcAddress(const char * symbol, void ** pfn, int hipVersion, uint64_t flags, hipDriverProcAddressQueryResult * symbolStatus);
hipError_t i_hipGraphNodeGetEnabled(hipGraphExec_t hGraphExec, hipGraphNode_t hNode, unsigned int * isEnabled);
hipError_t i_hipEventDestroy(hipEvent_t event);
hipError_t i_hipGraphEventRecordNodeGetEvent(hipGraphNode_t node, hipEvent_t * event_out);
hipError_t i_hipTexRefSetMipmapLevelBias(textureReference * texRef, float bias);
hipError_t i_hipMemcpy2DFromArray_spt(void * dst, size_t dpitch, hipArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, hipMemcpyKind kind);
hipError_t i_hipMemGetAccess(unsigned long long * flags, const hipMemLocation * location, void * ptr);
hipError_t i_hipImportExternalSemaphore(hipExternalSemaphore_t * extSem_out, const hipExternalSemaphoreHandleDesc * semHandleDesc);
hipError_t i_hipLaunchHostFunc(hipStream_t stream, hipHostFn_t fn, void * userData);
hipError_t i_hipBindTexture2D(size_t * offset, const textureReference * tex, const void * devPtr, const hipChannelFormatDesc * desc, size_t width, size_t height, size_t pitch);
hipError_t i_hipGraphCreate(hipGraph_t * pGraph, unsigned int flags);
hipError_t i_hipTexRefSetMipmappedArray(textureReference * texRef, struct hipMipmappedArray * mipmappedArray, unsigned int Flags);
hipError_t i_hipGraphRemoveDependencies(hipGraph_t graph, const hipGraphNode_t * from, const hipGraphNode_t * to, size_t numDependencies);
hipError_t i_hipMemset2D_spt(void * dst, size_t pitch, int value, size_t width, size_t height);
hipError_t i_hipMemcpy(void * dst, const void * src, size_t sizeBytes, hipMemcpyKind kind);
hipError_t i_hipMallocAsync(void ** dev_ptr, size_t size, hipStream_t stream);
hipError_t i___hipPushCallConfiguration(dim3 gridDim, dim3 blockDim, size_t sharedMem, hipStream_t stream);
hipError_t i_hipStreamWaitEvent(hipStream_t stream, hipEvent_t event, unsigned int flags);
hipError_t i_hipTexRefSetFlags(textureReference * texRef, unsigned int Flags);
hipError_t i_hipGraphMemFreeNodeGetParams(hipGraphNode_t node, void * dev_ptr);
hipError_t i_hipTexRefGetAddress(hipDeviceptr_t * dev_ptr, const textureReference * texRef);
hipError_t i_hipMemcpyToArray(hipArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, hipMemcpyKind kind);
hipError_t i_hipGraphEventWaitNodeGetEvent(hipGraphNode_t node, hipEvent_t * event_out);
hipError_t i_hipArrayDestroy(hipArray_t array);
hipError_t i_hipGraphKernelNodeCopyAttributes(hipGraphNode_t hSrc, hipGraphNode_t hDst);
hipError_t i_hipGraphExecHostNodeSetParams(hipGraphExec_t hGraphExec, hipGraphNode_t node, const hipHostNodeParams * pNodeParams);
hipError_t i_hipGraphNodeGetDependencies(hipGraphNode_t node, hipGraphNode_t * pDependencies, size_t * pNumDependencies);
hipError_t i_hipMemGetInfo(size_t * free, size_t * total);
hipError_t i_hipExtGetLastError();
hipError_t i_hipMemcpy2DFromArrayAsync_spt(void * dst, size_t dpitch, hipArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t width, size_t height, hipMemcpyKind kind, hipStream_t stream);
hipError_t i_hipMemPoolExportPointer(hipMemPoolPtrExportData * export_data, void * dev_ptr);
hipError_t i_hipUserObjectRetain(hipUserObject_t object, unsigned int count);
hipError_t i_hipMemAllocPitch(hipDeviceptr_t * dptr, size_t * pitch, size_t widthInBytes, size_t height, unsigned int elementSizeBytes);
hipError_t i_hipDevicePrimaryCtxSetFlags(hipDevice_t dev, unsigned int flags);
hipError_t i_hipGraphLaunch_spt(hipGraphExec_t graphExec, hipStream_t stream);
hipError_t i_hipMemcpyAtoA(hipArray_t dstArray, size_t dstOffset, hipArray_t srcArray, size_t srcOffset, size_t ByteCount);
hipError_t i_hipLaunchCooperativeKernel_spt(const void * f, dim3 gridDim, dim3 blockDim, void ** kernelParams, uint32_t sharedMemBytes, hipStream_t hStream);
hipError_t i_hipGraphDestroyNode(hipGraphNode_t node);
hipError_t i_hipDeviceGetName(char * name, int len, hipDevice_t device);
hipError_t i_hipTexRefGetFlags(unsigned int * pFlags, const textureReference * texRef);
hipError_t i_hipLaunchKernel_spt(const void * function_address, dim3 numBlocks, dim3 dimBlocks, void ** args, size_t sharedMemBytes, hipStream_t stream);
hipError_t i_hipExtGetLinkTypeAndHopCount(int device1, int device2, uint32_t * linktype, uint32_t * hopcount);
const char * i_hipApiName(uint32_t id);
hipError_t i_hipGraphMemcpyNodeSetParams1D(hipGraphNode_t node, void * dst, const void * src, size_t count, hipMemcpyKind kind);
hipError_t i_hipDeviceSetMemPool(int device, hipMemPool_t mem_pool);
hipError_t i_hipMallocMipmappedArray(hipMipmappedArray_t * mipmappedArray, const struct hipChannelFormatDesc * desc, struct hipExtent extent, unsigned int numLevels, unsigned int flags);
hipError_t i_hipMemcpy2DArrayToArray(hipArray_t dst, size_t wOffsetDst, size_t hOffsetDst, hipArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t width, size_t height, hipMemcpyKind kind);
hipError_t i_hipDeviceEnablePeerAccess(int peerDeviceId, unsigned int flags);
hipError_t i_hipHostMalloc(void ** ptr, size_t size, unsigned int flags);
hipError_t i_hipDestroySurfaceObject(hipSurfaceObject_t surfaceObject);
hipError_t i_hipDeviceGetByPCIBusId(int * device, const char * pciBusId);
hipError_t i_hipDeviceDisablePeerAccess(int peerDeviceId);
hipError_t i_hipStreamGetCaptureInfo_v2_spt(hipStream_t stream, hipStreamCaptureStatus * captureStatus_out, unsigned long long * id_out, hipGraph_t * graph_out, const hipGraphNode_t ** dependencies_out, size_t * numDependencies_out);
hipError_t i_hipStreamWriteValue32(hipStream_t stream, void * ptr, uint32_t value, unsigned int flags);
hipError_t i_hipTexRefSetAddress(size_t * ByteOffset, textureReference * texRef, hipDeviceptr_t dptr, size_t bytes);
hipError_t i_hipArray3DCreate(hipArray_t * array, const HIP_ARRAY3D_DESCRIPTOR * pAllocateArray);
hipError_t i_hipCtxGetFlags(unsigned int * flags);
hipError_t i_hipFreeMipmappedArray(hipMipmappedArray_t mipmappedArray);
hipError_t i_hipUserObjectRelease(hipUserObject_t object, unsigned int count);
hipError_t i_hipFreeAsync(void * dev_ptr, hipStream_t stream);
hipError_t i_hipDeviceSetSharedMemConfig(hipSharedMemConfig config);
hipError_t i_hipIpcCloseMemHandle(void * devPtr);
hipError_t i_hipOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * f, int blockSize, size_t dynSharedMemPerBlk);
hipError_t i_hipInit(unsigned int flags);
hipError_t i_hipCtxDisablePeerAccess(hipCtx_t peerCtx);
hipError_t i_hipGraphExternalSemaphoresWaitNodeSetParams(hipGraphNode_t hNode, const hipExternalSemaphoreWaitNodeParams * nodeParams);
size_t i_amd_dbgapi_get_build_id();
hipError_t i_hipMemsetD32(hipDeviceptr_t dest, int value, size_t count);
hipError_t i_hipModuleGetTexRef(textureReference ** texRef, hipModule_t hmod, const char * name);
hipError_t i_hipLaunchCooperativeKernel(const void * f, dim3 gridDim, dim3 blockDimX, void ** kernelParams, unsigned int sharedMemBytes, hipStream_t stream);
const char * i_hipKernelNameRef(const hipFunction_t f);
hipError_t i_hipGraphAddKernelNode(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, const hipKernelNodeParams * pNodeParams);
hipError_t i_hipUserObjectCreate(hipUserObject_t * object_out, void * ptr, hipHostFn_t destroy, unsigned int initialRefcount, unsigned int flags);
hipError_t i_hipFuncSetAttribute(const void * func, hipFuncAttribute attr, int value);
const char * i_amd_dbgapi_get_git_hash();
hipError_t i_hipMemcpyHtoAAsync(hipArray_t dstArray, size_t dstOffset, const void * srcHost, size_t ByteCount, hipStream_t stream);
hipError_t i_hipStreamWaitEvent_spt(hipStream_t stream, hipEvent_t event, unsigned int flags);
hipError_t i_hipMipmappedArrayCreate(hipMipmappedArray_t * pHandle, HIP_ARRAY3D_DESCRIPTOR * pMipmappedArrayDesc, unsigned int numMipmapLevels);
hipError_t i_hipCtxPushCurrent(hipCtx_t ctx);
hipError_t i_hipMemPoolExportToShareableHandle(void * shared_handle, hipMemPool_t mem_pool, hipMemAllocationHandleType handle_type, unsigned int flags);
hipError_t i_hipStreamGetDevice(hipStream_t stream, hipDevice_t * device);
hipError_t i_hipMemImportFromShareableHandle(hipMemGenericAllocationHandle_t * handle, void * osHandle, hipMemAllocationHandleType shHandleType);
hipError_t i_hipDevicePrimaryCtxRetain(hipCtx_t * pctx, hipDevice_t dev);
hipError_t i_hipGraphExecMemsetNodeSetParams(hipGraphExec_t hGraphExec, hipGraphNode_t node, const hipMemsetParams * pNodeParams);
hipError_t i_hipTexRefGetMipmapLevelBias(float * pbias, const textureReference * texRef);
hipError_t i_hipConfigureCall(dim3 gridDim, dim3 blockDim, size_t sharedMem, hipStream_t stream);
hipError_t i_hipDeviceGetPCIBusId(char * pciBusId, int len, int device);
hipError_t i_hipMemset2DAsync_spt(void * dst, size_t pitch, int value, size_t width, size_t height, hipStream_t stream);
hipError_t i_hipTexRefGetMipmapLevelClamp(float * pminMipmapLevelClamp, float * pmaxMipmapLevelClamp, const textureReference * texRef);
hipError_t i_hipMemcpy3DAsync(const struct hipMemcpy3DParms * p, hipStream_t stream);
hipError_t i_hipMemcpyPeer(void * dst, int dstDeviceId, const void * src, int srcDeviceId, size_t sizeBytes);
hipError_t i_hipHostFree(void * ptr);
hipError_t i_hipSetValidDevices(int * device_arr, int len);
hipError_t i_hipMemcpyAtoH(void * dst, hipArray_t srcArray, size_t srcOffset, size_t count);
hipError_t i_hipGetTextureReference(const textureReference ** texref, const void * symbol);
hipError_t i_hipDrvGetErrorName(hipError_t hipError, const char ** errorString);
hipError_t i_hipEventElapsedTime(float * ms, hipEvent_t start, hipEvent_t stop);
hipError_t i_hipStreamSynchronize_spt(hipStream_t stream);
hipError_t i_hipMipmappedArrayGetLevel(hipArray_t * pLevelArray, hipMipmappedArray_t hMipMappedArray, unsigned int level);
hipError_t i_hipModuleUnload(hipModule_t module);
hipError_t i_hipGraphDestroy(hipGraph_t graph);
hipError_t i_hipMallocArray(hipArray_t * array, const hipChannelFormatDesc * desc, size_t width, size_t height, unsigned int flags);
hipError_t i_hipMemPoolImportPointer(void ** dev_ptr, hipMemPool_t mem_pool, hipMemPoolPtrExportData * export_data);
hipError_t i_hipMemcpyDtoD(hipDeviceptr_t dst, hipDeviceptr_t src, size_t sizeBytes);
hipError_t i_hipGraphAddMemcpyNodeFromSymbol(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, void * dst, const void * symbol, size_t count, size_t offset, hipMemcpyKind kind);
hipError_t i_hipOccupancyMaxPotentialBlockSize(int * gridSize, int * blockSize, const void * f, size_t dynSharedMemPerBlk, int blockSizeLimit);
hipError_t i_hipMemsetD8(hipDeviceptr_t dest, unsigned char value, size_t count);
hipError_t i_hipCtxEnablePeerAccess(hipCtx_t peerCtx, unsigned int flags);
hipError_t i_hipGraphInstantiateWithFlags(hipGraphExec_t * pGraphExec, hipGraph_t graph, unsigned long long flags);
hipError_t i_hipGraphAddMemAllocNode(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, hipMemAllocNodeParams * pNodeParams);
hipError_t i_hipMemcpyParam2D(const hip_Memcpy2D * pCopy);
hipError_t i_hipBindTextureToMipmappedArray(const textureReference * tex, hipMipmappedArray_const_t mipmappedArray, const hipChannelFormatDesc * desc);
hipError_t i_hipGraphAddEmptyNode(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies);
hipError_t i_hipMemcpy2DFromArrayAsync(void * dst, size_t dpitch, hipArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, hipMemcpyKind kind, hipStream_t stream);
hipError_t i_hipModuleOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, hipFunction_t f, int blockSize, size_t dynSharedMemPerBlk, unsigned int flags);
hipError_t i_hipCtxSetCurrent(hipCtx_t ctx);
hipError_t i_hipGraphExecEventWaitNodeSetEvent(hipGraphExec_t hGraphExec, hipGraphNode_t hNode, hipEvent_t event);
hipError_t i_hipMemPoolSetAccess(hipMemPool_t mem_pool, const hipMemAccessDesc * desc_list, size_t count);
hipError_t i_hipFuncGetAttribute(int * value, hipFunction_attribute attrib, hipFunction_t hfunc);
hipError_t i_hipTexRefSetArray(textureReference * tex, hipArray_const_t array, unsigned int flags);
hipError_t i_hipMemRetainAllocationHandle(hipMemGenericAllocationHandle_t * handle, void * addr);
hipError_t i_hipRuntimeGetVersion(int * runtimeVersion);
hipError_t i_hipGraphAddEventWaitNode(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, hipEvent_t event);
hipError_t i_hipUnbindTexture(const textureReference * tex);
hipError_t i_hipPointerGetAttributes(hipPointerAttribute_t * attributes, const void * ptr);
hipError_t i_hipDeviceGraphMemTrim(int device);
hipError_t i_hipGraphKernelNodeGetAttribute(hipGraphNode_t hNode, hipLaunchAttributeID attr, hipLaunchAttributeValue * value);
hipError_t i_hipFree(void * ptr);
hipError_t i_hipHostUnregister(void * hostPtr);
hipError_t i_hipHostGetDevicePointer(void ** devPtr, void * hstPtr, unsigned int flags);
hipError_t i_hipStreamGetPriority_spt(hipStream_t stream, int * priority);
hipError_t i_hipGraphAddNode(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, hipGraphNodeParams * nodeParams);
hipError_t i_hipGraphGetRootNodes(hipGraph_t graph, hipGraphNode_t * pRootNodes, size_t * pNumRootNodes);
hipError_t i_hipModuleGetGlobal(hipDeviceptr_t * dptr, size_t * bytes, hipModule_t hmod, const char * name);
hipError_t i_hipGraphicsUnmapResources(int count, hipGraphicsResource_t * resources, hipStream_t stream);
hipError_t i_hipMemsetAsync(void * dst, int value, size_t sizeBytes, hipStream_t stream);
hipError_t i_hipExtStreamCreateWithCUMask(hipStream_t * stream, uint32_t cuMaskSize, const uint32_t * cuMask);
hipError_t i_hipBindTexture(size_t * offset, const textureReference * tex, const void * devPtr, const hipChannelFormatDesc * desc, size_t size);
hipError_t i_hipSetupArgument(const void * arg, size_t size, size_t offset);
hipError_t i_hipFuncSetCacheConfig(const void * func, hipFuncCache_t config);
hipError_t i_hipDrvGetErrorString(hipError_t hipError, const char ** errorString);
hipError_t i_hipCtxSetCacheConfig(hipFuncCache_t cacheConfig);
hipError_t i_hipMemset3D_spt(hipPitchedPtr pitchedDevPtr, int value, hipExtent extent);
hipError_t i_hipStreamGetCaptureInfo(hipStream_t stream, hipStreamCaptureStatus * pCaptureStatus, unsigned long long * pId);
hipError_t i_hipMemsetD16Async(hipDeviceptr_t dest, unsigned short value, size_t count, hipStream_t stream);
hipError_t i_hipGraphInstantiateWithParams(hipGraphExec_t * pGraphExec, hipGraph_t graph, hipGraphInstantiateParams * instantiateParams);
hipError_t i_hipIpcGetMemHandle(hipIpcMemHandle_t * handle, void * devPtr);
hipError_t i_hipGraphAddMemsetNode(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, const hipMemsetParams * pMemsetParams);
hipError_t i_hipEventCreateWithFlags(hipEvent_t * event, unsigned int flags);
hipError_t i_hipChooseDeviceR0600(int * device, const hipDeviceProp_tR0600 * prop);
hipError_t i_hipStreamQuery(hipStream_t stream);
hipError_t i_hipMemRangeGetAttribute(void * data, size_t data_size, hipMemRangeAttribute attribute, const void * dev_ptr, size_t count);
hipError_t i_hipCreateSurfaceObject(hipSurfaceObject_t * pSurfObject, const hipResourceDesc * pResDesc);
hipError_t i_hipTexRefSetMaxAnisotropy(textureReference * texRef, unsigned int maxAniso);
hipError_t i_hipGraphEventWaitNodeSetEvent(hipGraphNode_t node, hipEvent_t event);
hipError_t i_hipArrayCreate(hipArray_t * pHandle, const HIP_ARRAY_DESCRIPTOR * pAllocateArray);
hipError_t i_hipGraphKernelNodeGetParams(hipGraphNode_t node, hipKernelNodeParams * pNodeParams);
hipError_t i_hipMemUnmap(void * ptr, size_t size);
hipError_t i_hipMemcpyAsync_spt(void * dst, const void * src, size_t sizeBytes, hipMemcpyKind kind, hipStream_t stream);
hipError_t i_hipDeviceGetLimit(size_t * pValue, enum hipLimit_t limit);
hipError_t i_hipStreamAddCallback_spt(hipStream_t stream, hipStreamCallback_t callback, void * userData, unsigned int flags);
hipError_t i_hipTexRefGetMipmapFilterMode(enum hipTextureFilterMode * pfm, const textureReference * texRef);
hipError_t i_hipTexRefSetMipmapLevelClamp(textureReference * texRef, float minMipMapLevelClamp, float maxMipMapLevelClamp);
hipError_t i_hipStreamGetFlags(hipStream_t stream, unsigned int * flags);
hipError_t i_hipMemcpyAtoHAsync(void * dstHost, hipArray_t srcArray, size_t srcOffset, size_t ByteCount, hipStream_t stream);
hipError_t i_hipMemsetD32Async(hipDeviceptr_t dst, int value, size_t count, hipStream_t stream);
hipError_t i_hipGraphNodeFindInClone(hipGraphNode_t * pNode, hipGraphNode_t originalNode, hipGraph_t clonedGraph);
hipError_t i_hipGraphAddDependencies(hipGraph_t graph, const hipGraphNode_t * from, const hipGraphNode_t * to, size_t numDependencies);
hipError_t i_hipGraphGetNodes(hipGraph_t graph, hipGraphNode_t * nodes, size_t * numNodes);
hipError_t i_hipGraphLaunch(hipGraphExec_t graphExec, hipStream_t stream);
hipError_t i_hipMemMap(void * ptr, size_t size, size_t offset, hipMemGenericAllocationHandle_t handle, unsigned long long flags);
hipError_t i_hipGraphMemcpyNodeSetParamsToSymbol(hipGraphNode_t node, const void * symbol, const void * src, size_t count, size_t offset, hipMemcpyKind kind);
hipError_t i_hipStreamAttachMemAsync(hipStream_t stream, void * dev_ptr, size_t length, unsigned int flags);
hipError_t i_hipPointerGetAttribute(void * data, hipPointer_attribute attribute, hipDeviceptr_t ptr);
hipError_t i_hipMemPrefetchAsync(const void * dev_ptr, size_t count, int device, hipStream_t stream);
hipError_t i_hipMemcpyDtoA(hipArray_t dstArray, size_t dstOffset, hipDeviceptr_t srcDevice, size_t ByteCount);
hipError_t i_hipMemcpy_spt(void * dst, const void * src, size_t sizeBytes, hipMemcpyKind kind);
hipError_t i_hipCtxPopCurrent(hipCtx_t * ctx);
hipError_t i_hipPointerSetAttribute(const void * value, hipPointer_attribute attribute, hipDeviceptr_t ptr);
hipError_t i_hipLaunchByPtr(const void * func);
hipError_t i_hipDeviceSynchronize();
hipError_t i_hipDeviceGetCacheConfig(hipFuncCache_t * cacheConfig);
hipError_t i_hipMemcpy2DAsync_spt(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind, hipStream_t stream);
hipError_t i_hipDevicePrimaryCtxRelease(hipDevice_t dev);
hipError_t i_hipMemset3DAsync_spt(hipPitchedPtr pitchedDevPtr, int value, hipExtent extent, hipStream_t stream);
hipError_t i_hipMemsetD16(hipDeviceptr_t dest, unsigned short value, size_t count);
const char * i_hipGetErrorName(hipError_t hip_error);
hipError_t i_hipMemcpyFromSymbol_spt(void * dst, const void * symbol, size_t sizeBytes, size_t offset, hipMemcpyKind kind);
hipError_t i_hipDeviceGetP2PAttribute(int * value, hipDeviceP2PAttr attr, int srcDevice, int dstDevice);
hipError_t i_hipMemcpyToSymbolAsync_spt(const void * symbol, const void * src, size_t sizeBytes, size_t offset, hipMemcpyKind kind, hipStream_t stream);
hipError_t i_hipModuleGetFunction(hipFunction_t * function, hipModule_t module, const char * kname);
hipError_t i_hipMemsetAsync_spt(void * dst, int value, size_t sizeBytes, hipStream_t stream);
hipError_t i_hipDeviceSetLimit(enum hipLimit_t limit, size_t value);
hipError_t i_hipMallocManaged(void ** dev_ptr, size_t size, unsigned int flags);
hipError_t i_hipEventQuery(hipEvent_t event);
hipError_t i_hipStreamDestroy(hipStream_t stream);
hipError_t i_hipStreamGetPriority(hipStream_t stream, int * priority);
hipError_t i_hipTexRefSetMipmapFilterMode(textureReference * texRef, enum hipTextureFilterMode fm);
hipError_t i_hipEventSynchronize(hipEvent_t event);
hipError_t i_hipGraphNodeSetEnabled(hipGraphExec_t hGraphExec, hipGraphNode_t hNode, unsigned int isEnabled);
hipError_t i_hipModuleOccupancyMaxPotentialBlockSize(int * gridSize, int * blockSize, hipFunction_t f, size_t dynSharedMemPerBlk, int blockSizeLimit);
hipError_t i_hipGetMipmappedArrayLevel(hipArray_t * levelArray, hipMipmappedArray_const_t mipmappedArray, unsigned int level);
hipError_t i_hipMemMapArrayAsync(hipArrayMapInfo * mapInfoList, unsigned int count, hipStream_t stream);
hipError_t i_hipDestroyTextureObject(hipTextureObject_t textureObject);
hipError_t i_hipGraphicsMapResources(int count, hipGraphicsResource_t * resources, hipStream_t stream);
hipError_t i_hipGraphAddChildGraphNode(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, hipGraph_t childGraph);
hipError_t i_hipMemcpyToSymbolAsync(const void * symbol, const void * src, size_t sizeBytes, size_t offset, hipMemcpyKind kind, hipStream_t stream);
hipError_t i_hipGraphEventRecordNodeSetEvent(hipGraphNode_t node, hipEvent_t event);
hipError_t i_hipMemcpy3DAsync_spt(const hipMemcpy3DParms * p, hipStream_t stream);
hipError_t i_hipGraphDebugDotPrint(hipGraph_t graph, const char * path, unsigned int flags);
hipError_t i_hipGraphReleaseUserObject(hipGraph_t graph, hipUserObject_t object, unsigned int count);
hipError_t i_hipGraphNodeGetDependentNodes(hipGraphNode_t node, hipGraphNode_t * pDependentNodes, size_t * pNumDependentNodes);
hipError_t i_hipDeviceGet(hipDevice_t * device, int ordinal);
hipError_t i_hipGetTextureAlignmentOffset(size_t * offset, const textureReference * texref);
hipError_t i_hipMemRelease(hipMemGenericAllocationHandle_t handle);
hipError_t i_hipMemcpy2D_spt(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind);
hipError_t i_hipFreeArray(hipArray_t array);
hipError_t i_hipDrvMemcpy2DUnaligned(const hip_Memcpy2D * pCopy);
hipError_t i_hipGetTextureObjectResourceViewDesc(struct hipResourceViewDesc * pResViewDesc, hipTextureObject_t textureObject);
hipError_t i_hipMemExportToShareableHandle(void * shareableHandle, hipMemGenericAllocationHandle_t handle, hipMemAllocationHandleType handleType, unsigned long long flags);
hipError_t i_hipTexObjectDestroy(hipTextureObject_t texObject);
hipError_t i_hipMemset(void * dst, int value, size_t sizeBytes);
hipError_t i_hipDeviceGetMemPool(hipMemPool_t * mem_pool, int device);
hipError_t i_hipGraphExternalSemaphoresSignalNodeSetParams(hipGraphNode_t hNode, const hipExternalSemaphoreSignalNodeParams * nodeParams);
hipError_t i_hipMemPoolCreate(hipMemPool_t * mem_pool, const hipMemPoolProps * pool_props);
hipError_t i_hipStreamAddCallback(hipStream_t stream, hipStreamCallback_t callback, void * userData, unsigned int flags);
hipError_t i_hipTexRefGetBorderColor(float * pBorderColor, const textureReference * texRef);
hipError_t i_hipMemPoolGetAccess(hipMemAccessFlags * flags, hipMemPool_t mem_pool, hipMemLocation * location);
hipError_t i_hipTexRefSetAddressMode(textureReference * texRef, int dim, enum hipTextureAddressMode am);
hipError_t i_hipProfilerStart();
hipError_t i_hipGraphExecMemcpyNodeSetParams1D(hipGraphExec_t hGraphExec, hipGraphNode_t node, void * dst, const void * src, size_t count, hipMemcpyKind kind);
hipError_t i_hipMalloc3D(hipPitchedPtr * pitchedDevPtr, hipExtent extent);
hipError_t i_hipStreamIsCapturing_spt(hipStream_t stream, hipStreamCaptureStatus * pCaptureStatus);
hipError_t i_hipMemcpyToSymbol(const void * symbol, const void * src, size_t sizeBytes, size_t offset, hipMemcpyKind kind);
hipError_t i_hipPeekAtLastError();
hipError_t i_hipGraphMemcpyNodeGetParams(hipGraphNode_t node, hipMemcpy3DParms * pNodeParams);
hipError_t i_hipGraphExecDestroy(hipGraphExec_t graphExec);
hipError_t i_hipDeviceGetGraphMemAttribute(int device, hipGraphMemAttributeType attr, void * value);
hipError_t i_hipMemset2D(void * dst, size_t pitch, int value, size_t width, size_t height);
hipError_t i_hipSetDeviceFlags(unsigned int flags);
hipError_t i_hipOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * f, int blockSize, size_t dynSharedMemPerBlk, unsigned int flags);
hipError_t i_hipGetChannelDesc(hipChannelFormatDesc * desc, hipArray_const_t array);
hipError_t i_hipLaunchHostFunc_spt(hipStream_t stream, hipHostFn_t fn, void * userData);
hipError_t i_hipMemcpy3D(const struct hipMemcpy3DParms * p);
hipError_t i_hipDeviceComputeCapability(int * major, int * minor, hipDevice_t device);
hipError_t i_hipGraphicsSubResourceGetMappedArray(hipArray_t * array, hipGraphicsResource_t resource, unsigned int arrayIndex, unsigned int mipLevel);
hipError_t i_hipGraphAddMemcpyNodeToSymbol(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, const void * symbol, const void * src, size_t count, size_t offset, hipMemcpyKind kind);
hipError_t i_hipMemcpyDtoDAsync(hipDeviceptr_t dst, hipDeviceptr_t src, size_t sizeBytes, hipStream_t stream);
hipError_t i_hipStreamWaitValue32(hipStream_t stream, void * ptr, uint32_t value, unsigned int flags, uint32_t mask);
hipError_t i_hipGraphInstantiate(hipGraphExec_t * pGraphExec, hipGraph_t graph, hipGraphNode_t * pErrorNode, char * pLogBuffer, size_t bufferSize);
hipError_t i_hipMemPoolDestroy(hipMemPool_t mem_pool);
hipError_t i_hipGetDeviceCount(int * count);
hipError_t i_hipDeviceGetSharedMemConfig(hipSharedMemConfig * pConfig);
hipError_t i_hipMemcpyDtoHAsync(void * dst, hipDeviceptr_t src, size_t sizeBytes, hipStream_t stream);
hipError_t i_hipTexObjectGetTextureDesc(HIP_TEXTURE_DESC * pTexDesc, hipTextureObject_t texObject);
hipError_t i_hipModuleOccupancyMaxPotentialBlockSizeWithFlags(int * gridSize, int * blockSize, hipFunction_t f, size_t dynSharedMemPerBlk, int blockSizeLimit, unsigned int flags);
hipError_t i_hipStreamIsCapturing(hipStream_t stream, hipStreamCaptureStatus * pCaptureStatus);
hipError_t i_hipGraphRetainUserObject(hipGraph_t graph, hipUserObject_t object, unsigned int count, unsigned int flags);
hipError_t i_hipMallocFromPoolAsync(void ** dev_ptr, size_t size, hipMemPool_t mem_pool, hipStream_t stream);
hipError_t i_hipMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind, hipStream_t stream);
hipError_t i_hipStreamGetCaptureInfo_spt(hipStream_t stream, hipStreamCaptureStatus * pCaptureStatus, unsigned long long * pId);
hipError_t i_hipMemcpyHtoA(hipArray_t dstArray, size_t dstOffset, const void * srcHost, size_t count);
hipError_t i_hipStreamBeginCapture_spt(hipStream_t stream, hipStreamCaptureMode mode);
hipError_t i_hipGetDevicePropertiesR0600(hipDeviceProp_tR0600 * prop, int deviceId);
hipError_t i_hipCtxGetCurrent(hipCtx_t * ctx);
hipError_t i_hipDrvGraphAddMemcpyNode(hipGraphNode_t * phGraphNode, hipGraph_t hGraph, const hipGraphNode_t * dependencies, size_t numDependencies, const HIP_MEMCPY3D * copyParams, hipCtx_t ctx);
hipError_t i_hipMemcpy2D(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind);
hipError_t i_hipMipmappedArrayDestroy(hipMipmappedArray_t hMipmappedArray);
hipError_t i_hipDrvMemcpy3DAsync(const HIP_MEMCPY3D * pCopy, hipStream_t stream);
hipError_t i_hipCtxGetDevice(hipDevice_t * device);
hipError_t i_hipThreadExchangeStreamCaptureMode(hipStreamCaptureMode * mode);
hipError_t i_hipMemcpyFromArray(void * dst, hipArray_const_t srcArray, size_t wOffset, size_t hOffset, size_t count, hipMemcpyKind kind);
hipError_t i_hipTexRefSetAddress2D(textureReference * texRef, const HIP_ARRAY_DESCRIPTOR * desc, hipDeviceptr_t dptr, size_t Pitch);
hipError_t i_hipExternalMemoryGetMappedBuffer(void ** devPtr, hipExternalMemory_t extMem, const hipExternalMemoryBufferDesc * bufferDesc);
hipError_t i_hipGraphChildGraphNodeGetGraph(hipGraphNode_t node, hipGraph_t * pGraph);
hipError_t i_hipMemGetAllocationPropertiesFromHandle(hipMemAllocationProp * prop, hipMemGenericAllocationHandle_t handle);
hipError_t i_hipDeviceSetCacheConfig(hipFuncCache_t cacheConfig);
hipError_t i_hipTexObjectCreate(hipTextureObject_t * pTexObject, const HIP_RESOURCE_DESC * pResDesc, const HIP_TEXTURE_DESC * pTexDesc, const HIP_RESOURCE_VIEW_DESC * pResViewDesc);
hipError_t i_hipMemcpyAtoD(hipDeviceptr_t dstDevice, hipArray_t srcArray, size_t srcOffset, size_t ByteCount);
hipError_t i_hipGraphClone(hipGraph_t * pGraphClone, hipGraph_t originalGraph);
hipError_t i_hipMemPtrGetInfo(void * ptr, size_t * size);
hipError_t i_hipDriverGetVersion(int * driverVersion);
hipError_t i_hipStreamCreate(hipStream_t * stream);
hipError_t i_hipDrvMemcpy3D(const HIP_MEMCPY3D * pCopy);
hipError_t i_hipMemcpyHtoD(hipDeviceptr_t dst, void * src, size_t sizeBytes);
hipError_t i_hipMemset3DAsync(hipPitchedPtr pitchedDevPtr, int value, hipExtent extent, hipStream_t stream);
hipError_t i_hipGraphKernelNodeSetParams(hipGraphNode_t node, const hipKernelNodeParams * pNodeParams);
hipError_t i_hipHostAlloc(void ** ptr, size_t size, unsigned int flags);
hipError_t i_hipHostRegister(void * hostPtr, size_t sizeBytes, unsigned int flags);
hipError_t i_hipGraphHostNodeSetParams(hipGraphNode_t node, const hipHostNodeParams * pNodeParams);
hipError_t i_hipMemcpyParam2DAsync(const hip_Memcpy2D * pCopy, hipStream_t stream);
hipError_t i_hipExternalMemoryGetMappedMipmappedArray(hipMipmappedArray_t * mipmap, hipExternalMemory_t extMem, const hipExternalMemoryMipmappedArrayDesc * mipmapDesc);
hipError_t i_hipDeviceGetAttribute(int * pi, hipDeviceAttribute_t attr, int deviceId);
hipError_t i_hipIpcGetEventHandle(hipIpcEventHandle_t * handle, hipEvent_t event);
hipError_t i_hipTexRefGetArray(hipArray_t * pArray, const textureReference * texRef);
hipError_t i_hipModuleLaunchKernel(hipFunction_t f, unsigned int gridDimX, unsigned int gridDimY, unsigned int gridDimZ, unsigned int blockDimX, unsigned int blockDimY, unsigned int blockDimZ, unsigned int sharedMemBytes, hipStream_t stream, void ** kernelParams, void ** extra);
hipError_t i_hipGraphNodeGetType(hipGraphNode_t node, hipGraphNodeType * pType);
hipError_t i_hipGraphExecEventRecordNodeSetEvent(hipGraphExec_t hGraphExec, hipGraphNode_t hNode, hipEvent_t event);
hipError_t i_hipGraphAddExternalSemaphoresSignalNode(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, const hipExternalSemaphoreSignalNodeParams * nodeParams);
hipError_t i_hipMemset2DAsync(void * dst, size_t pitch, int value, size_t width, size_t height, hipStream_t stream);
hipError_t i_hipMemcpyWithStream(void * dst, const void * src, size_t sizeBytes, hipMemcpyKind kind, hipStream_t stream);
hipError_t i_hipBindTextureToArray(const textureReference * tex, hipArray_const_t array, const hipChannelFormatDesc * desc);
hipError_t i_hipStreamBeginCaptureToGraph(hipStream_t stream, hipGraph_t graph, const hipGraphNode_t * dependencies, const hipGraphEdgeData * dependencyData, size_t numDependencies, hipStreamCaptureMode mode);
hipError_t i_hipGraphGetEdges(hipGraph_t graph, hipGraphNode_t * from, hipGraphNode_t * to, size_t * numEdges);
hipError_t i_hipStreamWriteValue64(hipStream_t stream, void * ptr, uint64_t value, unsigned int flags);
hipError_t i_hipGraphicsResourceGetMappedPointer(void ** devPtr, size_t * size, hipGraphicsResource_t resource);
hipError_t i_hipDeviceCanAccessPeer(int * canAccessPeer, int deviceId, int peerDeviceId);
hipError_t i_hipGraphMemcpyNodeSetParams(hipGraphNode_t node, const hipMemcpy3DParms * pNodeParams);
hipError_t i_hipMemcpyHtoDAsync(hipDeviceptr_t dst, void * src, size_t sizeBytes, hipStream_t stream);
hipError_t i_hipGetLastError();
hipError_t i_hipModuleOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, hipFunction_t f, int blockSize, size_t dynSharedMemPerBlk);
hipError_t i_hipGraphicsUnregisterResource(hipGraphicsResource_t resource);
hipError_t i_hipGraphAddExternalSemaphoresWaitNode(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, const hipExternalSemaphoreWaitNodeParams * nodeParams);
void i___hipGetPCH(const char ** pch, unsigned int * size);
hipError_t i_hipEventCreate(hipEvent_t * event);
hipError_t i_hipStreamCreateWithPriority(hipStream_t * stream, unsigned int flags, int priority);
hipError_t i_hipModuleLaunchCooperativeKernel(hipFunction_t f, unsigned int gridDimX, unsigned int gridDimY, unsigned int gridDimZ, unsigned int blockDimX, unsigned int blockDimY, unsigned int blockDimZ, unsigned int sharedMemBytes, hipStream_t stream, void ** kernelParams);
hipError_t i_hipGraphMemAllocNodeGetParams(hipGraphNode_t node, hipMemAllocNodeParams * pNodeParams);
hipError_t i_hipMemAddressFree(void * devPtr, size_t size);
hipError_t i_hipCtxCreate(hipCtx_t * ctx, unsigned int flags, hipDevice_t device);
hipError_t i_hipCtxGetCacheConfig(hipFuncCache_t * cacheConfig);
hipError_t i_hipStreamSynchronize(hipStream_t stream);
const char * i_amd_dbgapi_get_build_name();
hipError_t i_hipArray3DGetDescriptor(HIP_ARRAY3D_DESCRIPTOR * pArrayDescriptor, hipArray_t array);
hipError_t i_hipTexRefGetFilterMode(enum hipTextureFilterMode * pfm, const textureReference * texRef);
hipError_t i_hipMalloc3DArray(hipArray_t * array, const struct hipChannelFormatDesc * desc, struct hipExtent extent, unsigned int flags);
hipError_t i_hipGraphExecUpdate(hipGraphExec_t hGraphExec, hipGraph_t hGraph, hipGraphNode_t * hErrorNode_out, hipGraphExecUpdateResult * updateResult_out);
hipError_t i_hipEventRecord(hipEvent_t event, hipStream_t stream);
hipError_t i_hipMemcpy2DFromArray(void * dst, size_t dpitch, hipArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, hipMemcpyKind kind);
hipError_t i_hipGraphUpload(hipGraphExec_t graphExec, hipStream_t stream);
hipError_t i_hipTexRefSetFilterMode(textureReference * texRef, enum hipTextureFilterMode fm);
hipError_t i_hipTexRefGetAddressMode(enum hipTextureAddressMode * pam, const textureReference * texRef, int dim);
hipError_t i_hipDeviceGetStreamPriorityRange(int * leastPriority, int * greatestPriority);
hipError_t i_hipModuleLoadData(hipModule_t * module, const void * image);
hipError_t i_hipStreamWaitValue64(hipStream_t stream, void * ptr, uint64_t value, unsigned int flags, uint64_t mask);
hipError_t i_hipMallocPitch(void ** ptr, size_t * pitch, size_t width, size_t height);
hipError_t i_hipDeviceTotalMem(size_t * bytes, hipDevice_t device);
hipError_t i_hipMemPoolTrimTo(hipMemPool_t mem_pool, size_t min_bytes_to_hold);
hipError_t i_hipDeviceGetUuid(hipUUID * uuid, hipDevice_t device);
hipError_t i_hipDevicePrimaryCtxReset(hipDevice_t dev);
hipError_t i_hipGraphExecExternalSemaphoresSignalNodeSetParams(hipGraphExec_t hGraphExec, hipGraphNode_t hNode, const hipExternalSemaphoreSignalNodeParams * nodeParams);
hipError_t i_hipExtLaunchMultiKernelMultiDevice(hipLaunchParams * launchParamsList, int numDevices, unsigned int flags);
hipError_t i_hipMemsetD8Async(hipDeviceptr_t dest, unsigned char value, size_t count, hipStream_t stream);
hipError_t i_hipDrvGraphAddMemsetNode(hipGraphNode_t * phGraphNode, hipGraph_t hGraph, const hipGraphNode_t * dependencies, size_t numDependencies, const HIP_MEMSET_NODE_PARAMS * memsetParams, hipCtx_t ctx);
hipError_t i_hipGraphMemcpyNodeSetParamsFromSymbol(hipGraphNode_t node, void * dst, const void * symbol, size_t count, size_t offset, hipMemcpyKind kind);
hipError_t i_hipGetTextureObjectTextureDesc(hipTextureDesc * pTexDesc, hipTextureObject_t textureObject);
hipError_t i_hipMalloc(void ** ptr, size_t size);
hipError_t i_hipDeviceSetGraphMemAttribute(int device, hipGraphMemAttributeType attr, void * value);
hipError_t i_hipGraphExternalSemaphoresWaitNodeGetParams(hipGraphNode_t hNode, hipExternalSemaphoreWaitNodeParams * params_out);
hipError_t i_hipMemcpy2DToArray_spt(hipArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind);
hipError_t i_hipArrayGetDescriptor(HIP_ARRAY_DESCRIPTOR * pArrayDescriptor, hipArray_t array);
hipError_t i_hipTexRefGetMipMappedArray(hipMipmappedArray_t * pArray, const textureReference * texRef);
hipError_t i_hipMemRangeGetAttributes(void ** data, size_t * data_sizes, hipMemRangeAttribute * attributes, size_t num_attributes, const void * dev_ptr, size_t count);
hipError_t i_hipArrayGetInfo(hipChannelFormatDesc * desc, hipExtent * extent, unsigned int * flags, hipArray_t array);
hipError_t i_hipMemAdvise(const void * dev_ptr, size_t count, hipMemoryAdvise advice, int device);
hipError_t i_hipTexRefSetBorderColor(textureReference * texRef, float * pBorderColor);
hipError_t i_hipExtMallocWithFlags(void ** ptr, size_t sizeBytes, unsigned int flags);
hipError_t i_hipMemAllocHost(void ** ptr, size_t size);
hipError_t i_hipGraphAddHostNode(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, const hipHostNodeParams * pNodeParams);
hipError_t i_hipGraphExecMemcpyNodeSetParams(hipGraphExec_t hGraphExec, hipGraphNode_t node, hipMemcpy3DParms * pNodeParams);
hipError_t i_hipFuncGetAttributes(struct hipFuncAttributes * attr, const void * func);
hipError_t i_hipMemset3D(hipPitchedPtr pitchedDevPtr, int value, hipExtent extent);
hipError_t i_hipTexRefGetMaxAnisotropy(int * pmaxAnsio, const textureReference * texRef);
hipError_t i_hipGraphAddMemFreeNode(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, void * dev_ptr);
hipError_t i_hipMemcpyFromArray_spt(void * dst, hipArray_const_t src, size_t wOffsetSrc, size_t hOffset, size_t count, hipMemcpyKind kind);
hipError_t i_hipMemcpy3D_spt(const struct hipMemcpy3DParms * p);
hipError_t i_hipStreamBeginCapture(hipStream_t stream, hipStreamCaptureMode mode);
hipError_t i_hipMemcpy2DToArrayAsync(hipArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind, hipStream_t stream);
hipError_t i_hipCtxSetSharedMemConfig(hipSharedMemConfig config);
hipError_t i_hipSetDevice(int deviceId);
hipError_t i_hipMemcpyDtoH(void * dst, hipDeviceptr_t src, size_t sizeBytes);
hipError_t i_hipMemcpyAsync(void * dst, const void * src, size_t sizeBytes, hipMemcpyKind kind, hipStream_t stream);
hipError_t i_hipMemCreate(hipMemGenericAllocationHandle_t * handle, size_t size, const hipMemAllocationProp * prop, unsigned long long flags);
hipError_t i_hipFuncSetSharedMemConfig(const void * func, hipSharedMemConfig config);
hipError_t i_hipGraphExecChildGraphNodeSetParams(hipGraphExec_t hGraphExec, hipGraphNode_t node, hipGraph_t childGraph);
struct hipChannelFormatDesc i_hipCreateChannelDesc(int x, int y, int z, int w, enum hipChannelFormatKind f);
hipError_t i_hipFreeHost(void * ptr);
hipError_t i_hipTexObjectGetResourceDesc(HIP_RESOURCE_DESC * pResDesc, hipTextureObject_t texObject);
hipError_t i_hipMemcpy2DToArrayAsync_spt(hipArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind, hipStream_t stream);
hipError_t i_hipLaunchCooperativeKernelMultiDevice(hipLaunchParams * launchParamsList, int numDevices, unsigned int flags);
hipError_t i_hipHostGetFlags(unsigned int * flagsPtr, void * hostPtr);
hipError_t i_hipMemSetAccess(void * ptr, size_t size, const hipMemAccessDesc * desc, size_t count);
hipError_t i_hipStreamUpdateCaptureDependencies(hipStream_t stream, hipGraphNode_t * dependencies, size_t numDependencies, unsigned int flags);
hipError_t i_hipGraphExternalSemaphoresSignalNodeGetParams(hipGraphNode_t hNode, hipExternalSemaphoreSignalNodeParams * params_out);
hipError_t i_hipTexRefSetFormat(textureReference * texRef, hipArray_Format fmt, int NumPackedComponents);
hipError_t i_hipDeviceReset();
hipError_t i_hipMemPoolImportFromShareableHandle(hipMemPool_t * mem_pool, void * shared_handle, hipMemAllocationHandleType handle_type, unsigned int flags);
hipError_t i_hipCtxGetApiVersion(hipCtx_t ctx, int * apiVersion);
hipError_t i_hipDeviceGetDefaultMemPool(hipMemPool_t * mem_pool, int device);
hipError_t i_hipStreamGetFlags_spt(hipStream_t stream, unsigned int * flags);
hipError_t i_hipMemcpyFromSymbolAsync_spt(void * dst, const void * symbol, size_t sizeBytes, size_t offset, hipMemcpyKind kind, hipStream_t stream);
hipError_t i_hipTexObjectGetResourceViewDesc(HIP_RESOURCE_VIEW_DESC * pResViewDesc, hipTextureObject_t texObject);
hipError_t i_hipGetDevice(int * deviceId);
hipError_t i_hipGetSymbolAddress(void ** devPtr, const void * symbol);
hipError_t i_hipMemcpyToSymbol_spt(const void * symbol, const void * src, size_t sizeBytes, size_t offset, hipMemcpyKind kind);
hipError_t i_hipGraphAddMemcpyNode1D(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, void * dst, const void * src, size_t count, hipMemcpyKind kind);
hipError_t i_hipDestroyExternalSemaphore(hipExternalSemaphore_t extSem);
hipError_t i_hipIpcOpenMemHandle(void ** devPtr, hipIpcMemHandle_t handle, unsigned int flags);
hipError_t i_hipCtxDestroy(hipCtx_t ctx);
hipError_t i_hipStreamGetCaptureInfo_v2(hipStream_t stream, hipStreamCaptureStatus * captureStatus_out, unsigned long long * id_out, hipGraph_t * graph_out, const hipGraphNode_t ** dependencies_out, size_t * numDependencies_out);
int i_hipGetStreamDeviceId(hipStream_t stream);
hipError_t i_hipImportExternalMemory(hipExternalMemory_t * extMem_out, const hipExternalMemoryHandleDesc * memHandleDesc);
hipError_t i_hipGraphExecKernelNodeSetParams(hipGraphExec_t hGraphExec, hipGraphNode_t node, const hipKernelNodeParams * pNodeParams);
hipError_t i_hipStreamEndCapture_spt(hipStream_t stream, hipGraph_t * pGraph);
hipError_t i_hipGraphExecMemcpyNodeSetParamsFromSymbol(hipGraphExec_t hGraphExec, hipGraphNode_t node, void * dst, const void * symbol, size_t count, size_t offset, hipMemcpyKind kind);
hipError_t i_hipCreateTextureObject(hipTextureObject_t * pTexObject, const hipResourceDesc * pResDesc, const hipTextureDesc * pTexDesc, const struct hipResourceViewDesc * pResViewDesc);
hipError_t i_hipModuleLoadDataEx(hipModule_t * module, const void * image, unsigned int numOptions, hipJitOption * options, void ** optionValues);
hipError_t i___hipPopCallConfiguration(dim3 * gridDim, dim3 * blockDim, size_t * sharedMem, hipStream_t * stream);
hipError_t i_hipMemcpyFromSymbol(void * dst, const void * symbol, size_t sizeBytes, size_t offset, hipMemcpyKind kind);
hipError_t i_hipMemPoolGetAttribute(hipMemPool_t mem_pool, hipMemPoolAttr attr, void * value);
hipError_t i_hipGraphAddMemcpyNode(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, const hipMemcpy3DParms * pCopyParams);
const char * i_hipKernelNameRefByPtr(const void * hostFunction, hipStream_t stream);
hipError_t i_hipIpcOpenEventHandle(hipEvent_t * event, hipIpcEventHandle_t handle);
hipError_t i_hipGetFuncBySymbol(hipFunction_t * functionPtr, const void * symbolPtr);
hipError_t i_hipGraphAddEventRecordNode(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, hipEvent_t event);
hipError_t i_hipModuleLaunchCooperativeKernelMultiDevice(hipFunctionLaunchParams * launchParamsList, unsigned int numDevices, unsigned int flags);
hipError_t i_hipGraphMemsetNodeSetParams(hipGraphNode_t node, const hipMemsetParams * pNodeParams);
hipError_t i_hipSignalExternalSemaphoresAsync(const hipExternalSemaphore_t * extSemArray, const hipExternalSemaphoreSignalParams * paramsArray, unsigned int numExtSems, hipStream_t stream);
hipError_t i_hipModuleLoad(hipModule_t * module, const char * fname); 

// HIP Functions Types
typedef hipError_t (*__hipGraphMemsetNodeGetParams_t)(hipGraphNode_t node, hipMemsetParams * pNodeParams);
typedef hipError_t (*__hipWaitExternalSemaphoresAsync_t)(const hipExternalSemaphore_t * extSemArray, const hipExternalSemaphoreWaitParams * paramsArray, unsigned int numExtSems, hipStream_t stream);
typedef hipError_t (*__hipDrvPointerGetAttributes_t)(unsigned int numAttributes, hipPointer_attribute * attributes, void ** data, hipDeviceptr_t ptr);
typedef hipError_t (*__hipExtStreamGetCUMask_t)(hipStream_t stream, uint32_t cuMaskSize, uint32_t * cuMask);
typedef hipError_t (*__hipMemset_spt_t)(void * dst, int value, size_t sizeBytes);
typedef hipError_t (*__hipCtxSynchronize_t)();
typedef hipError_t (*__hipMemGetAddressRange_t)(hipDeviceptr_t * pbase, size_t * psize, hipDeviceptr_t dptr);
typedef hipError_t (*__hipMallocHost_t)(void ** ptr, size_t size);
typedef hipError_t (*__hipMemAddressReserve_t)(void ** ptr, size_t size, size_t alignment, void * addr, unsigned long long flags);
typedef hipError_t (*__hipStreamEndCapture_t)(hipStream_t stream, hipGraph_t * pGraph);
typedef hipError_t (*__hipGraphExecExternalSemaphoresWaitNodeSetParams_t)(hipGraphExec_t hGraphExec, hipGraphNode_t hNode, const hipExternalSemaphoreWaitNodeParams * nodeParams);
typedef hipError_t (*__hipStreamQuery_spt_t)(hipStream_t stream);
typedef hipError_t (*__hipStreamCreateWithFlags_t)(hipStream_t * stream, unsigned int flags);
typedef hipError_t (*__hipMemGetAllocationGranularity_t)(size_t * granularity, const hipMemAllocationProp * prop, hipMemAllocationGranularity_flags option);
typedef hipError_t (*__hipProfilerStop_t)();
typedef const char * (*__hipGetErrorString_t)(hipError_t hipError);
typedef hipError_t (*__hipGetDeviceFlags_t)(unsigned int * flags);
typedef hipError_t (*__hipGetTextureObjectResourceDesc_t)(hipResourceDesc * pResDesc, hipTextureObject_t textureObject);
typedef hipError_t (*__hipMemcpyPeerAsync_t)(void * dst, int dstDeviceId, const void * src, int srcDevice, size_t sizeBytes, hipStream_t stream);
typedef hipError_t (*__hipTexRefGetFormat_t)(hipArray_Format * pFormat, int * pNumChannels, const textureReference * texRef);
typedef hipError_t (*__hipLaunchKernel_t)(const void * function_address, dim3 numBlocks, dim3 dimBlocks, void ** args, size_t sharedMemBytes, hipStream_t stream);
typedef hipError_t (*__hipGraphHostNodeGetParams_t)(hipGraphNode_t node, hipHostNodeParams * pNodeParams);
typedef hipError_t (*__hipCtxGetSharedMemConfig_t)(hipSharedMemConfig * pConfig);
typedef hipError_t (*__hipMemcpy2DToArray_t)(hipArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind);
typedef hipError_t (*__hipMemcpyFromSymbolAsync_t)(void * dst, const void * symbol, size_t sizeBytes, size_t offset, hipMemcpyKind kind, hipStream_t stream);
typedef hipError_t (*__hipGraphKernelNodeSetAttribute_t)(hipGraphNode_t hNode, hipLaunchAttributeID attr, const hipLaunchAttributeValue * value);
typedef hipError_t (*__hipMemPoolSetAttribute_t)(hipMemPool_t mem_pool, hipMemPoolAttr attr, void * value);
typedef hipError_t (*__hipEventRecord_spt_t)(hipEvent_t event, hipStream_t stream);
typedef hipError_t (*__hipExtLaunchKernel_t)(const void * function_address, dim3 numBlocks, dim3 dimBlocks, void ** args, size_t sharedMemBytes, hipStream_t stream, hipEvent_t startEvent, hipEvent_t stopEvent, int flags);
typedef hipError_t (*__hipGraphExecMemcpyNodeSetParamsToSymbol_t)(hipGraphExec_t hGraphExec, hipGraphNode_t node, const void * symbol, const void * src, size_t count, size_t offset, hipMemcpyKind kind);
typedef hipError_t (*__hipDevicePrimaryCtxGetState_t)(hipDevice_t dev, unsigned int * flags, int * active);
typedef hipError_t (*__hipGetSymbolSize_t)(size_t * size, const void * symbol);
typedef hipError_t (*__hipDestroyExternalMemory_t)(hipExternalMemory_t extMem);
typedef hipError_t (*__hipGetProcAddress_t)(const char * symbol, void ** pfn, int hipVersion, uint64_t flags, hipDriverProcAddressQueryResult * symbolStatus);
typedef hipError_t (*__hipGraphNodeGetEnabled_t)(hipGraphExec_t hGraphExec, hipGraphNode_t hNode, unsigned int * isEnabled);
typedef hipError_t (*__hipEventDestroy_t)(hipEvent_t event);
typedef hipError_t (*__hipGraphEventRecordNodeGetEvent_t)(hipGraphNode_t node, hipEvent_t * event_out);
typedef hipError_t (*__hipTexRefSetMipmapLevelBias_t)(textureReference * texRef, float bias);
typedef hipError_t (*__hipMemcpy2DFromArray_spt_t)(void * dst, size_t dpitch, hipArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, hipMemcpyKind kind);
typedef hipError_t (*__hipMemGetAccess_t)(unsigned long long * flags, const hipMemLocation * location, void * ptr);
typedef hipError_t (*__hipImportExternalSemaphore_t)(hipExternalSemaphore_t * extSem_out, const hipExternalSemaphoreHandleDesc * semHandleDesc);
typedef hipError_t (*__hipLaunchHostFunc_t)(hipStream_t stream, hipHostFn_t fn, void * userData);
typedef hipError_t (*__hipBindTexture2D_t)(size_t * offset, const textureReference * tex, const void * devPtr, const hipChannelFormatDesc * desc, size_t width, size_t height, size_t pitch);
typedef hipError_t (*__hipGraphCreate_t)(hipGraph_t * pGraph, unsigned int flags);
typedef hipError_t (*__hipTexRefSetMipmappedArray_t)(textureReference * texRef, struct hipMipmappedArray * mipmappedArray, unsigned int Flags);
typedef hipError_t (*__hipGraphRemoveDependencies_t)(hipGraph_t graph, const hipGraphNode_t * from, const hipGraphNode_t * to, size_t numDependencies);
typedef hipError_t (*__hipMemset2D_spt_t)(void * dst, size_t pitch, int value, size_t width, size_t height);
typedef hipError_t (*__hipMemcpy_t)(void * dst, const void * src, size_t sizeBytes, hipMemcpyKind kind);
typedef hipError_t (*__hipMallocAsync_t)(void ** dev_ptr, size_t size, hipStream_t stream);
typedef hipError_t (*____hipPushCallConfiguration_t)(dim3 gridDim, dim3 blockDim, size_t sharedMem, hipStream_t stream);
typedef hipError_t (*__hipStreamWaitEvent_t)(hipStream_t stream, hipEvent_t event, unsigned int flags);
typedef hipError_t (*__hipTexRefSetFlags_t)(textureReference * texRef, unsigned int Flags);
typedef hipError_t (*__hipGraphMemFreeNodeGetParams_t)(hipGraphNode_t node, void * dev_ptr);
typedef hipError_t (*__hipTexRefGetAddress_t)(hipDeviceptr_t * dev_ptr, const textureReference * texRef);
typedef hipError_t (*__hipMemcpyToArray_t)(hipArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, hipMemcpyKind kind);
typedef hipError_t (*__hipGraphEventWaitNodeGetEvent_t)(hipGraphNode_t node, hipEvent_t * event_out);
typedef hipError_t (*__hipArrayDestroy_t)(hipArray_t array);
typedef hipError_t (*__hipGraphKernelNodeCopyAttributes_t)(hipGraphNode_t hSrc, hipGraphNode_t hDst);
typedef hipError_t (*__hipGraphExecHostNodeSetParams_t)(hipGraphExec_t hGraphExec, hipGraphNode_t node, const hipHostNodeParams * pNodeParams);
typedef hipError_t (*__hipGraphNodeGetDependencies_t)(hipGraphNode_t node, hipGraphNode_t * pDependencies, size_t * pNumDependencies);
typedef hipError_t (*__hipMemGetInfo_t)(size_t * free, size_t * total);
typedef hipError_t (*__hipExtGetLastError_t)();
typedef hipError_t (*__hipMemcpy2DFromArrayAsync_spt_t)(void * dst, size_t dpitch, hipArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t width, size_t height, hipMemcpyKind kind, hipStream_t stream);
typedef hipError_t (*__hipMemPoolExportPointer_t)(hipMemPoolPtrExportData * export_data, void * dev_ptr);
typedef hipError_t (*__hipUserObjectRetain_t)(hipUserObject_t object, unsigned int count);
typedef hipError_t (*__hipMemAllocPitch_t)(hipDeviceptr_t * dptr, size_t * pitch, size_t widthInBytes, size_t height, unsigned int elementSizeBytes);
typedef hipError_t (*__hipDevicePrimaryCtxSetFlags_t)(hipDevice_t dev, unsigned int flags);
typedef hipError_t (*__hipGraphLaunch_spt_t)(hipGraphExec_t graphExec, hipStream_t stream);
typedef hipError_t (*__hipMemcpyAtoA_t)(hipArray_t dstArray, size_t dstOffset, hipArray_t srcArray, size_t srcOffset, size_t ByteCount);
typedef hipError_t (*__hipLaunchCooperativeKernel_spt_t)(const void * f, dim3 gridDim, dim3 blockDim, void ** kernelParams, uint32_t sharedMemBytes, hipStream_t hStream);
typedef hipError_t (*__hipGraphDestroyNode_t)(hipGraphNode_t node);
typedef hipError_t (*__hipDeviceGetName_t)(char * name, int len, hipDevice_t device);
typedef hipError_t (*__hipTexRefGetFlags_t)(unsigned int * pFlags, const textureReference * texRef);
typedef hipError_t (*__hipLaunchKernel_spt_t)(const void * function_address, dim3 numBlocks, dim3 dimBlocks, void ** args, size_t sharedMemBytes, hipStream_t stream);
typedef hipError_t (*__hipExtGetLinkTypeAndHopCount_t)(int device1, int device2, uint32_t * linktype, uint32_t * hopcount);
typedef const char * (*__hipApiName_t)(uint32_t id);
typedef hipError_t (*__hipGraphMemcpyNodeSetParams1D_t)(hipGraphNode_t node, void * dst, const void * src, size_t count, hipMemcpyKind kind);
typedef hipError_t (*__hipDeviceSetMemPool_t)(int device, hipMemPool_t mem_pool);
typedef hipError_t (*__hipMallocMipmappedArray_t)(hipMipmappedArray_t * mipmappedArray, const struct hipChannelFormatDesc * desc, struct hipExtent extent, unsigned int numLevels, unsigned int flags);
typedef hipError_t (*__hipMemcpy2DArrayToArray_t)(hipArray_t dst, size_t wOffsetDst, size_t hOffsetDst, hipArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t width, size_t height, hipMemcpyKind kind);
typedef hipError_t (*__hipDeviceEnablePeerAccess_t)(int peerDeviceId, unsigned int flags);
typedef hipError_t (*__hipHostMalloc_t)(void ** ptr, size_t size, unsigned int flags);
typedef hipError_t (*__hipDestroySurfaceObject_t)(hipSurfaceObject_t surfaceObject);
typedef hipError_t (*__hipDeviceGetByPCIBusId_t)(int * device, const char * pciBusId);
typedef hipError_t (*__hipDeviceDisablePeerAccess_t)(int peerDeviceId);
typedef hipError_t (*__hipStreamGetCaptureInfo_v2_spt_t)(hipStream_t stream, hipStreamCaptureStatus * captureStatus_out, unsigned long long * id_out, hipGraph_t * graph_out, const hipGraphNode_t ** dependencies_out, size_t * numDependencies_out);
typedef hipError_t (*__hipStreamWriteValue32_t)(hipStream_t stream, void * ptr, uint32_t value, unsigned int flags);
typedef hipError_t (*__hipTexRefSetAddress_t)(size_t * ByteOffset, textureReference * texRef, hipDeviceptr_t dptr, size_t bytes);
typedef hipError_t (*__hipArray3DCreate_t)(hipArray_t * array, const HIP_ARRAY3D_DESCRIPTOR * pAllocateArray);
typedef hipError_t (*__hipCtxGetFlags_t)(unsigned int * flags);
typedef hipError_t (*__hipFreeMipmappedArray_t)(hipMipmappedArray_t mipmappedArray);
typedef hipError_t (*__hipUserObjectRelease_t)(hipUserObject_t object, unsigned int count);
typedef hipError_t (*__hipFreeAsync_t)(void * dev_ptr, hipStream_t stream);
typedef hipError_t (*__hipDeviceSetSharedMemConfig_t)(hipSharedMemConfig config);
typedef hipError_t (*__hipIpcCloseMemHandle_t)(void * devPtr);
typedef hipError_t (*__hipOccupancyMaxActiveBlocksPerMultiprocessor_t)(int * numBlocks, const void * f, int blockSize, size_t dynSharedMemPerBlk);
typedef hipError_t (*__hipInit_t)(unsigned int flags);
typedef hipError_t (*__hipCtxDisablePeerAccess_t)(hipCtx_t peerCtx);
typedef hipError_t (*__hipGraphExternalSemaphoresWaitNodeSetParams_t)(hipGraphNode_t hNode, const hipExternalSemaphoreWaitNodeParams * nodeParams);
typedef size_t (*__amd_dbgapi_get_build_id_t)();
typedef hipError_t (*__hipMemsetD32_t)(hipDeviceptr_t dest, int value, size_t count);
typedef hipError_t (*__hipModuleGetTexRef_t)(textureReference ** texRef, hipModule_t hmod, const char * name);
typedef hipError_t (*__hipLaunchCooperativeKernel_t)(const void * f, dim3 gridDim, dim3 blockDimX, void ** kernelParams, unsigned int sharedMemBytes, hipStream_t stream);
typedef const char * (*__hipKernelNameRef_t)(const hipFunction_t f);
typedef hipError_t (*__hipGraphAddKernelNode_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, const hipKernelNodeParams * pNodeParams);
typedef hipError_t (*__hipUserObjectCreate_t)(hipUserObject_t * object_out, void * ptr, hipHostFn_t destroy, unsigned int initialRefcount, unsigned int flags);
typedef hipError_t (*__hipFuncSetAttribute_t)(const void * func, hipFuncAttribute attr, int value);
typedef const char * (*__amd_dbgapi_get_git_hash_t)();
typedef hipError_t (*__hipMemcpyHtoAAsync_t)(hipArray_t dstArray, size_t dstOffset, const void * srcHost, size_t ByteCount, hipStream_t stream);
typedef hipError_t (*__hipStreamWaitEvent_spt_t)(hipStream_t stream, hipEvent_t event, unsigned int flags);
typedef hipError_t (*__hipMipmappedArrayCreate_t)(hipMipmappedArray_t * pHandle, HIP_ARRAY3D_DESCRIPTOR * pMipmappedArrayDesc, unsigned int numMipmapLevels);
typedef hipError_t (*__hipCtxPushCurrent_t)(hipCtx_t ctx);
typedef hipError_t (*__hipMemPoolExportToShareableHandle_t)(void * shared_handle, hipMemPool_t mem_pool, hipMemAllocationHandleType handle_type, unsigned int flags);
typedef hipError_t (*__hipStreamGetDevice_t)(hipStream_t stream, hipDevice_t * device);
typedef hipError_t (*__hipMemImportFromShareableHandle_t)(hipMemGenericAllocationHandle_t * handle, void * osHandle, hipMemAllocationHandleType shHandleType);
typedef hipError_t (*__hipDevicePrimaryCtxRetain_t)(hipCtx_t * pctx, hipDevice_t dev);
typedef hipError_t (*__hipGraphExecMemsetNodeSetParams_t)(hipGraphExec_t hGraphExec, hipGraphNode_t node, const hipMemsetParams * pNodeParams);
typedef hipError_t (*__hipTexRefGetMipmapLevelBias_t)(float * pbias, const textureReference * texRef);
typedef hipError_t (*__hipConfigureCall_t)(dim3 gridDim, dim3 blockDim, size_t sharedMem, hipStream_t stream);
typedef hipError_t (*__hipDeviceGetPCIBusId_t)(char * pciBusId, int len, int device);
typedef hipError_t (*__hipMemset2DAsync_spt_t)(void * dst, size_t pitch, int value, size_t width, size_t height, hipStream_t stream);
typedef hipError_t (*__hipTexRefGetMipmapLevelClamp_t)(float * pminMipmapLevelClamp, float * pmaxMipmapLevelClamp, const textureReference * texRef);
typedef hipError_t (*__hipMemcpy3DAsync_t)(const struct hipMemcpy3DParms * p, hipStream_t stream);
typedef hipError_t (*__hipMemcpyPeer_t)(void * dst, int dstDeviceId, const void * src, int srcDeviceId, size_t sizeBytes);
typedef hipError_t (*__hipHostFree_t)(void * ptr);
typedef hipError_t (*__hipSetValidDevices_t)(int * device_arr, int len);
typedef hipError_t (*__hipMemcpyAtoH_t)(void * dst, hipArray_t srcArray, size_t srcOffset, size_t count);
typedef hipError_t (*__hipGetTextureReference_t)(const textureReference ** texref, const void * symbol);
typedef hipError_t (*__hipDrvGetErrorName_t)(hipError_t hipError, const char ** errorString);
typedef hipError_t (*__hipEventElapsedTime_t)(float * ms, hipEvent_t start, hipEvent_t stop);
typedef hipError_t (*__hipStreamSynchronize_spt_t)(hipStream_t stream);
typedef hipError_t (*__hipMipmappedArrayGetLevel_t)(hipArray_t * pLevelArray, hipMipmappedArray_t hMipMappedArray, unsigned int level);
typedef hipError_t (*__hipModuleUnload_t)(hipModule_t module);
typedef hipError_t (*__hipGraphDestroy_t)(hipGraph_t graph);
typedef hipError_t (*__hipMallocArray_t)(hipArray_t * array, const hipChannelFormatDesc * desc, size_t width, size_t height, unsigned int flags);
typedef hipError_t (*__hipMemPoolImportPointer_t)(void ** dev_ptr, hipMemPool_t mem_pool, hipMemPoolPtrExportData * export_data);
typedef hipError_t (*__hipMemcpyDtoD_t)(hipDeviceptr_t dst, hipDeviceptr_t src, size_t sizeBytes);
typedef hipError_t (*__hipGraphAddMemcpyNodeFromSymbol_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, void * dst, const void * symbol, size_t count, size_t offset, hipMemcpyKind kind);
typedef hipError_t (*__hipOccupancyMaxPotentialBlockSize_t)(int * gridSize, int * blockSize, const void * f, size_t dynSharedMemPerBlk, int blockSizeLimit);
typedef hipError_t (*__hipMemsetD8_t)(hipDeviceptr_t dest, unsigned char value, size_t count);
typedef hipError_t (*__hipCtxEnablePeerAccess_t)(hipCtx_t peerCtx, unsigned int flags);
typedef hipError_t (*__hipGraphInstantiateWithFlags_t)(hipGraphExec_t * pGraphExec, hipGraph_t graph, unsigned long long flags);
typedef hipError_t (*__hipGraphAddMemAllocNode_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, hipMemAllocNodeParams * pNodeParams);
typedef hipError_t (*__hipMemcpyParam2D_t)(const hip_Memcpy2D * pCopy);
typedef hipError_t (*__hipBindTextureToMipmappedArray_t)(const textureReference * tex, hipMipmappedArray_const_t mipmappedArray, const hipChannelFormatDesc * desc);
typedef hipError_t (*__hipGraphAddEmptyNode_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies);
typedef hipError_t (*__hipMemcpy2DFromArrayAsync_t)(void * dst, size_t dpitch, hipArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, hipMemcpyKind kind, hipStream_t stream);
typedef hipError_t (*__hipModuleOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_t)(int * numBlocks, hipFunction_t f, int blockSize, size_t dynSharedMemPerBlk, unsigned int flags);
typedef hipError_t (*__hipCtxSetCurrent_t)(hipCtx_t ctx);
typedef hipError_t (*__hipGraphExecEventWaitNodeSetEvent_t)(hipGraphExec_t hGraphExec, hipGraphNode_t hNode, hipEvent_t event);
typedef hipError_t (*__hipMemPoolSetAccess_t)(hipMemPool_t mem_pool, const hipMemAccessDesc * desc_list, size_t count);
typedef hipError_t (*__hipFuncGetAttribute_t)(int * value, hipFunction_attribute attrib, hipFunction_t hfunc);
typedef hipError_t (*__hipTexRefSetArray_t)(textureReference * tex, hipArray_const_t array, unsigned int flags);
typedef hipError_t (*__hipMemRetainAllocationHandle_t)(hipMemGenericAllocationHandle_t * handle, void * addr);
typedef hipError_t (*__hipRuntimeGetVersion_t)(int * runtimeVersion);
typedef hipError_t (*__hipGraphAddEventWaitNode_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, hipEvent_t event);
typedef hipError_t (*__hipUnbindTexture_t)(const textureReference * tex);
typedef hipError_t (*__hipPointerGetAttributes_t)(hipPointerAttribute_t * attributes, const void * ptr);
typedef hipError_t (*__hipDeviceGraphMemTrim_t)(int device);
typedef hipError_t (*__hipGraphKernelNodeGetAttribute_t)(hipGraphNode_t hNode, hipLaunchAttributeID attr, hipLaunchAttributeValue * value);
typedef hipError_t (*__hipFree_t)(void * ptr);
typedef hipError_t (*__hipHostUnregister_t)(void * hostPtr);
typedef hipError_t (*__hipHostGetDevicePointer_t)(void ** devPtr, void * hstPtr, unsigned int flags);
typedef hipError_t (*__hipStreamGetPriority_spt_t)(hipStream_t stream, int * priority);
typedef hipError_t (*__hipGraphAddNode_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, hipGraphNodeParams * nodeParams);
typedef hipError_t (*__hipGraphGetRootNodes_t)(hipGraph_t graph, hipGraphNode_t * pRootNodes, size_t * pNumRootNodes);
typedef hipError_t (*__hipModuleGetGlobal_t)(hipDeviceptr_t * dptr, size_t * bytes, hipModule_t hmod, const char * name);
typedef hipError_t (*__hipGraphicsUnmapResources_t)(int count, hipGraphicsResource_t * resources, hipStream_t stream);
typedef hipError_t (*__hipMemsetAsync_t)(void * dst, int value, size_t sizeBytes, hipStream_t stream);
typedef hipError_t (*__hipExtStreamCreateWithCUMask_t)(hipStream_t * stream, uint32_t cuMaskSize, const uint32_t * cuMask);
typedef hipError_t (*__hipBindTexture_t)(size_t * offset, const textureReference * tex, const void * devPtr, const hipChannelFormatDesc * desc, size_t size);
typedef hipError_t (*__hipSetupArgument_t)(const void * arg, size_t size, size_t offset);
typedef hipError_t (*__hipFuncSetCacheConfig_t)(const void * func, hipFuncCache_t config);
typedef hipError_t (*__hipDrvGetErrorString_t)(hipError_t hipError, const char ** errorString);
typedef hipError_t (*__hipCtxSetCacheConfig_t)(hipFuncCache_t cacheConfig);
typedef hipError_t (*__hipMemset3D_spt_t)(hipPitchedPtr pitchedDevPtr, int value, hipExtent extent);
typedef hipError_t (*__hipStreamGetCaptureInfo_t)(hipStream_t stream, hipStreamCaptureStatus * pCaptureStatus, unsigned long long * pId);
typedef hipError_t (*__hipMemsetD16Async_t)(hipDeviceptr_t dest, unsigned short value, size_t count, hipStream_t stream);
typedef hipError_t (*__hipGraphInstantiateWithParams_t)(hipGraphExec_t * pGraphExec, hipGraph_t graph, hipGraphInstantiateParams * instantiateParams);
typedef hipError_t (*__hipIpcGetMemHandle_t)(hipIpcMemHandle_t * handle, void * devPtr);
typedef hipError_t (*__hipGraphAddMemsetNode_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, const hipMemsetParams * pMemsetParams);
typedef hipError_t (*__hipEventCreateWithFlags_t)(hipEvent_t * event, unsigned int flags);
typedef hipError_t (*__hipChooseDeviceR0600_t)(int * device, const hipDeviceProp_tR0600 * prop);
typedef hipError_t (*__hipStreamQuery_t)(hipStream_t stream);
typedef hipError_t (*__hipMemRangeGetAttribute_t)(void * data, size_t data_size, hipMemRangeAttribute attribute, const void * dev_ptr, size_t count);
typedef hipError_t (*__hipCreateSurfaceObject_t)(hipSurfaceObject_t * pSurfObject, const hipResourceDesc * pResDesc);
typedef hipError_t (*__hipTexRefSetMaxAnisotropy_t)(textureReference * texRef, unsigned int maxAniso);
typedef hipError_t (*__hipGraphEventWaitNodeSetEvent_t)(hipGraphNode_t node, hipEvent_t event);
typedef hipError_t (*__hipArrayCreate_t)(hipArray_t * pHandle, const HIP_ARRAY_DESCRIPTOR * pAllocateArray);
typedef hipError_t (*__hipGraphKernelNodeGetParams_t)(hipGraphNode_t node, hipKernelNodeParams * pNodeParams);
typedef hipError_t (*__hipMemUnmap_t)(void * ptr, size_t size);
typedef hipError_t (*__hipMemcpyAsync_spt_t)(void * dst, const void * src, size_t sizeBytes, hipMemcpyKind kind, hipStream_t stream);
typedef hipError_t (*__hipDeviceGetLimit_t)(size_t * pValue, enum hipLimit_t limit);
typedef hipError_t (*__hipStreamAddCallback_spt_t)(hipStream_t stream, hipStreamCallback_t callback, void * userData, unsigned int flags);
typedef hipError_t (*__hipTexRefGetMipmapFilterMode_t)(enum hipTextureFilterMode * pfm, const textureReference * texRef);
typedef hipError_t (*__hipTexRefSetMipmapLevelClamp_t)(textureReference * texRef, float minMipMapLevelClamp, float maxMipMapLevelClamp);
typedef hipError_t (*__hipStreamGetFlags_t)(hipStream_t stream, unsigned int * flags);
typedef hipError_t (*__hipMemcpyAtoHAsync_t)(void * dstHost, hipArray_t srcArray, size_t srcOffset, size_t ByteCount, hipStream_t stream);
typedef hipError_t (*__hipMemsetD32Async_t)(hipDeviceptr_t dst, int value, size_t count, hipStream_t stream);
typedef hipError_t (*__hipGraphNodeFindInClone_t)(hipGraphNode_t * pNode, hipGraphNode_t originalNode, hipGraph_t clonedGraph);
typedef hipError_t (*__hipGraphAddDependencies_t)(hipGraph_t graph, const hipGraphNode_t * from, const hipGraphNode_t * to, size_t numDependencies);
typedef hipError_t (*__hipGraphGetNodes_t)(hipGraph_t graph, hipGraphNode_t * nodes, size_t * numNodes);
typedef hipError_t (*__hipGraphLaunch_t)(hipGraphExec_t graphExec, hipStream_t stream);
typedef hipError_t (*__hipMemMap_t)(void * ptr, size_t size, size_t offset, hipMemGenericAllocationHandle_t handle, unsigned long long flags);
typedef hipError_t (*__hipGraphMemcpyNodeSetParamsToSymbol_t)(hipGraphNode_t node, const void * symbol, const void * src, size_t count, size_t offset, hipMemcpyKind kind);
typedef hipError_t (*__hipStreamAttachMemAsync_t)(hipStream_t stream, void * dev_ptr, size_t length, unsigned int flags);
typedef hipError_t (*__hipPointerGetAttribute_t)(void * data, hipPointer_attribute attribute, hipDeviceptr_t ptr);
typedef hipError_t (*__hipMemPrefetchAsync_t)(const void * dev_ptr, size_t count, int device, hipStream_t stream);
typedef hipError_t (*__hipMemcpyDtoA_t)(hipArray_t dstArray, size_t dstOffset, hipDeviceptr_t srcDevice, size_t ByteCount);
typedef hipError_t (*__hipMemcpy_spt_t)(void * dst, const void * src, size_t sizeBytes, hipMemcpyKind kind);
typedef hipError_t (*__hipCtxPopCurrent_t)(hipCtx_t * ctx);
typedef hipError_t (*__hipPointerSetAttribute_t)(const void * value, hipPointer_attribute attribute, hipDeviceptr_t ptr);
typedef hipError_t (*__hipLaunchByPtr_t)(const void * func);
typedef hipError_t (*__hipDeviceSynchronize_t)();
typedef hipError_t (*__hipDeviceGetCacheConfig_t)(hipFuncCache_t * cacheConfig);
typedef hipError_t (*__hipMemcpy2DAsync_spt_t)(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind, hipStream_t stream);
typedef hipError_t (*__hipDevicePrimaryCtxRelease_t)(hipDevice_t dev);
typedef hipError_t (*__hipMemset3DAsync_spt_t)(hipPitchedPtr pitchedDevPtr, int value, hipExtent extent, hipStream_t stream);
typedef hipError_t (*__hipMemsetD16_t)(hipDeviceptr_t dest, unsigned short value, size_t count);
typedef const char * (*__hipGetErrorName_t)(hipError_t hip_error);
typedef hipError_t (*__hipMemcpyFromSymbol_spt_t)(void * dst, const void * symbol, size_t sizeBytes, size_t offset, hipMemcpyKind kind);
typedef hipError_t (*__hipDeviceGetP2PAttribute_t)(int * value, hipDeviceP2PAttr attr, int srcDevice, int dstDevice);
typedef hipError_t (*__hipMemcpyToSymbolAsync_spt_t)(const void * symbol, const void * src, size_t sizeBytes, size_t offset, hipMemcpyKind kind, hipStream_t stream);
typedef hipError_t (*__hipModuleGetFunction_t)(hipFunction_t * function, hipModule_t module, const char * kname);
typedef hipError_t (*__hipMemsetAsync_spt_t)(void * dst, int value, size_t sizeBytes, hipStream_t stream);
typedef hipError_t (*__hipDeviceSetLimit_t)(enum hipLimit_t limit, size_t value);
typedef hipError_t (*__hipMallocManaged_t)(void ** dev_ptr, size_t size, unsigned int flags);
typedef hipError_t (*__hipEventQuery_t)(hipEvent_t event);
typedef hipError_t (*__hipStreamDestroy_t)(hipStream_t stream);
typedef hipError_t (*__hipStreamGetPriority_t)(hipStream_t stream, int * priority);
typedef hipError_t (*__hipTexRefSetMipmapFilterMode_t)(textureReference * texRef, enum hipTextureFilterMode fm);
typedef hipError_t (*__hipEventSynchronize_t)(hipEvent_t event);
typedef hipError_t (*__hipGraphNodeSetEnabled_t)(hipGraphExec_t hGraphExec, hipGraphNode_t hNode, unsigned int isEnabled);
typedef hipError_t (*__hipModuleOccupancyMaxPotentialBlockSize_t)(int * gridSize, int * blockSize, hipFunction_t f, size_t dynSharedMemPerBlk, int blockSizeLimit);
typedef hipError_t (*__hipGetMipmappedArrayLevel_t)(hipArray_t * levelArray, hipMipmappedArray_const_t mipmappedArray, unsigned int level);
typedef hipError_t (*__hipMemMapArrayAsync_t)(hipArrayMapInfo * mapInfoList, unsigned int count, hipStream_t stream);
typedef hipError_t (*__hipDestroyTextureObject_t)(hipTextureObject_t textureObject);
typedef hipError_t (*__hipGraphicsMapResources_t)(int count, hipGraphicsResource_t * resources, hipStream_t stream);
typedef hipError_t (*__hipGraphAddChildGraphNode_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, hipGraph_t childGraph);
typedef hipError_t (*__hipMemcpyToSymbolAsync_t)(const void * symbol, const void * src, size_t sizeBytes, size_t offset, hipMemcpyKind kind, hipStream_t stream);
typedef hipError_t (*__hipGraphEventRecordNodeSetEvent_t)(hipGraphNode_t node, hipEvent_t event);
typedef hipError_t (*__hipMemcpy3DAsync_spt_t)(const hipMemcpy3DParms * p, hipStream_t stream);
typedef hipError_t (*__hipGraphDebugDotPrint_t)(hipGraph_t graph, const char * path, unsigned int flags);
typedef hipError_t (*__hipGraphReleaseUserObject_t)(hipGraph_t graph, hipUserObject_t object, unsigned int count);
typedef hipError_t (*__hipGraphNodeGetDependentNodes_t)(hipGraphNode_t node, hipGraphNode_t * pDependentNodes, size_t * pNumDependentNodes);
typedef hipError_t (*__hipDeviceGet_t)(hipDevice_t * device, int ordinal);
typedef hipError_t (*__hipGetTextureAlignmentOffset_t)(size_t * offset, const textureReference * texref);
typedef hipError_t (*__hipMemRelease_t)(hipMemGenericAllocationHandle_t handle);
typedef hipError_t (*__hipMemcpy2D_spt_t)(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind);
typedef hipError_t (*__hipFreeArray_t)(hipArray_t array);
typedef hipError_t (*__hipDrvMemcpy2DUnaligned_t)(const hip_Memcpy2D * pCopy);
typedef hipError_t (*__hipGetTextureObjectResourceViewDesc_t)(struct hipResourceViewDesc * pResViewDesc, hipTextureObject_t textureObject);
typedef hipError_t (*__hipMemExportToShareableHandle_t)(void * shareableHandle, hipMemGenericAllocationHandle_t handle, hipMemAllocationHandleType handleType, unsigned long long flags);
typedef hipError_t (*__hipTexObjectDestroy_t)(hipTextureObject_t texObject);
typedef hipError_t (*__hipMemset_t)(void * dst, int value, size_t sizeBytes);
typedef hipError_t (*__hipDeviceGetMemPool_t)(hipMemPool_t * mem_pool, int device);
typedef hipError_t (*__hipGraphExternalSemaphoresSignalNodeSetParams_t)(hipGraphNode_t hNode, const hipExternalSemaphoreSignalNodeParams * nodeParams);
typedef hipError_t (*__hipMemPoolCreate_t)(hipMemPool_t * mem_pool, const hipMemPoolProps * pool_props);
typedef hipError_t (*__hipStreamAddCallback_t)(hipStream_t stream, hipStreamCallback_t callback, void * userData, unsigned int flags);
typedef hipError_t (*__hipTexRefGetBorderColor_t)(float * pBorderColor, const textureReference * texRef);
typedef hipError_t (*__hipMemPoolGetAccess_t)(hipMemAccessFlags * flags, hipMemPool_t mem_pool, hipMemLocation * location);
typedef hipError_t (*__hipTexRefSetAddressMode_t)(textureReference * texRef, int dim, enum hipTextureAddressMode am);
typedef hipError_t (*__hipProfilerStart_t)();
typedef hipError_t (*__hipGraphExecMemcpyNodeSetParams1D_t)(hipGraphExec_t hGraphExec, hipGraphNode_t node, void * dst, const void * src, size_t count, hipMemcpyKind kind);
typedef hipError_t (*__hipMalloc3D_t)(hipPitchedPtr * pitchedDevPtr, hipExtent extent);
typedef hipError_t (*__hipStreamIsCapturing_spt_t)(hipStream_t stream, hipStreamCaptureStatus * pCaptureStatus);
typedef hipError_t (*__hipMemcpyToSymbol_t)(const void * symbol, const void * src, size_t sizeBytes, size_t offset, hipMemcpyKind kind);
typedef hipError_t (*__hipPeekAtLastError_t)();
typedef hipError_t (*__hipGraphMemcpyNodeGetParams_t)(hipGraphNode_t node, hipMemcpy3DParms * pNodeParams);
typedef hipError_t (*__hipGraphExecDestroy_t)(hipGraphExec_t graphExec);
typedef hipError_t (*__hipDeviceGetGraphMemAttribute_t)(int device, hipGraphMemAttributeType attr, void * value);
typedef hipError_t (*__hipMemset2D_t)(void * dst, size_t pitch, int value, size_t width, size_t height);
typedef hipError_t (*__hipSetDeviceFlags_t)(unsigned int flags);
typedef hipError_t (*__hipOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_t)(int * numBlocks, const void * f, int blockSize, size_t dynSharedMemPerBlk, unsigned int flags);
typedef hipError_t (*__hipGetChannelDesc_t)(hipChannelFormatDesc * desc, hipArray_const_t array);
typedef hipError_t (*__hipLaunchHostFunc_spt_t)(hipStream_t stream, hipHostFn_t fn, void * userData);
typedef hipError_t (*__hipMemcpy3D_t)(const struct hipMemcpy3DParms * p);
typedef hipError_t (*__hipDeviceComputeCapability_t)(int * major, int * minor, hipDevice_t device);
typedef hipError_t (*__hipGraphicsSubResourceGetMappedArray_t)(hipArray_t * array, hipGraphicsResource_t resource, unsigned int arrayIndex, unsigned int mipLevel);
typedef hipError_t (*__hipGraphAddMemcpyNodeToSymbol_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, const void * symbol, const void * src, size_t count, size_t offset, hipMemcpyKind kind);
typedef hipError_t (*__hipMemcpyDtoDAsync_t)(hipDeviceptr_t dst, hipDeviceptr_t src, size_t sizeBytes, hipStream_t stream);
typedef hipError_t (*__hipStreamWaitValue32_t)(hipStream_t stream, void * ptr, uint32_t value, unsigned int flags, uint32_t mask);
typedef hipError_t (*__hipGraphInstantiate_t)(hipGraphExec_t * pGraphExec, hipGraph_t graph, hipGraphNode_t * pErrorNode, char * pLogBuffer, size_t bufferSize);
typedef hipError_t (*__hipMemPoolDestroy_t)(hipMemPool_t mem_pool);
typedef hipError_t (*__hipGetDeviceCount_t)(int * count);
typedef hipError_t (*__hipDeviceGetSharedMemConfig_t)(hipSharedMemConfig * pConfig);
typedef hipError_t (*__hipMemcpyDtoHAsync_t)(void * dst, hipDeviceptr_t src, size_t sizeBytes, hipStream_t stream);
typedef hipError_t (*__hipTexObjectGetTextureDesc_t)(HIP_TEXTURE_DESC * pTexDesc, hipTextureObject_t texObject);
typedef hipError_t (*__hipModuleOccupancyMaxPotentialBlockSizeWithFlags_t)(int * gridSize, int * blockSize, hipFunction_t f, size_t dynSharedMemPerBlk, int blockSizeLimit, unsigned int flags);
typedef hipError_t (*__hipStreamIsCapturing_t)(hipStream_t stream, hipStreamCaptureStatus * pCaptureStatus);
typedef hipError_t (*__hipGraphRetainUserObject_t)(hipGraph_t graph, hipUserObject_t object, unsigned int count, unsigned int flags);
typedef hipError_t (*__hipMallocFromPoolAsync_t)(void ** dev_ptr, size_t size, hipMemPool_t mem_pool, hipStream_t stream);
typedef hipError_t (*__hipMemcpy2DAsync_t)(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind, hipStream_t stream);
typedef hipError_t (*__hipStreamGetCaptureInfo_spt_t)(hipStream_t stream, hipStreamCaptureStatus * pCaptureStatus, unsigned long long * pId);
typedef hipError_t (*__hipMemcpyHtoA_t)(hipArray_t dstArray, size_t dstOffset, const void * srcHost, size_t count);
typedef hipError_t (*__hipStreamBeginCapture_spt_t)(hipStream_t stream, hipStreamCaptureMode mode);
typedef hipError_t (*__hipGetDevicePropertiesR0600_t)(hipDeviceProp_tR0600 * prop, int deviceId);
typedef hipError_t (*__hipCtxGetCurrent_t)(hipCtx_t * ctx);
typedef hipError_t (*__hipDrvGraphAddMemcpyNode_t)(hipGraphNode_t * phGraphNode, hipGraph_t hGraph, const hipGraphNode_t * dependencies, size_t numDependencies, const HIP_MEMCPY3D * copyParams, hipCtx_t ctx);
typedef hipError_t (*__hipMemcpy2D_t)(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind);
typedef hipError_t (*__hipMipmappedArrayDestroy_t)(hipMipmappedArray_t hMipmappedArray);
typedef hipError_t (*__hipDrvMemcpy3DAsync_t)(const HIP_MEMCPY3D * pCopy, hipStream_t stream);
typedef hipError_t (*__hipCtxGetDevice_t)(hipDevice_t * device);
typedef hipError_t (*__hipThreadExchangeStreamCaptureMode_t)(hipStreamCaptureMode * mode);
typedef hipError_t (*__hipMemcpyFromArray_t)(void * dst, hipArray_const_t srcArray, size_t wOffset, size_t hOffset, size_t count, hipMemcpyKind kind);
typedef hipError_t (*__hipTexRefSetAddress2D_t)(textureReference * texRef, const HIP_ARRAY_DESCRIPTOR * desc, hipDeviceptr_t dptr, size_t Pitch);
typedef hipError_t (*__hipExternalMemoryGetMappedBuffer_t)(void ** devPtr, hipExternalMemory_t extMem, const hipExternalMemoryBufferDesc * bufferDesc);
typedef hipError_t (*__hipGraphChildGraphNodeGetGraph_t)(hipGraphNode_t node, hipGraph_t * pGraph);
typedef hipError_t (*__hipMemGetAllocationPropertiesFromHandle_t)(hipMemAllocationProp * prop, hipMemGenericAllocationHandle_t handle);
typedef hipError_t (*__hipDeviceSetCacheConfig_t)(hipFuncCache_t cacheConfig);
typedef hipError_t (*__hipTexObjectCreate_t)(hipTextureObject_t * pTexObject, const HIP_RESOURCE_DESC * pResDesc, const HIP_TEXTURE_DESC * pTexDesc, const HIP_RESOURCE_VIEW_DESC * pResViewDesc);
typedef hipError_t (*__hipMemcpyAtoD_t)(hipDeviceptr_t dstDevice, hipArray_t srcArray, size_t srcOffset, size_t ByteCount);
typedef hipError_t (*__hipGraphClone_t)(hipGraph_t * pGraphClone, hipGraph_t originalGraph);
typedef hipError_t (*__hipMemPtrGetInfo_t)(void * ptr, size_t * size);
typedef hipError_t (*__hipDriverGetVersion_t)(int * driverVersion);
typedef hipError_t (*__hipStreamCreate_t)(hipStream_t * stream);
typedef hipError_t (*__hipDrvMemcpy3D_t)(const HIP_MEMCPY3D * pCopy);
typedef hipError_t (*__hipMemcpyHtoD_t)(hipDeviceptr_t dst, void * src, size_t sizeBytes);
typedef hipError_t (*__hipMemset3DAsync_t)(hipPitchedPtr pitchedDevPtr, int value, hipExtent extent, hipStream_t stream);
typedef hipError_t (*__hipGraphKernelNodeSetParams_t)(hipGraphNode_t node, const hipKernelNodeParams * pNodeParams);
typedef hipError_t (*__hipHostAlloc_t)(void ** ptr, size_t size, unsigned int flags);
typedef hipError_t (*__hipHostRegister_t)(void * hostPtr, size_t sizeBytes, unsigned int flags);
typedef hipError_t (*__hipGraphHostNodeSetParams_t)(hipGraphNode_t node, const hipHostNodeParams * pNodeParams);
typedef hipError_t (*__hipMemcpyParam2DAsync_t)(const hip_Memcpy2D * pCopy, hipStream_t stream);
typedef hipError_t (*__hipExternalMemoryGetMappedMipmappedArray_t)(hipMipmappedArray_t * mipmap, hipExternalMemory_t extMem, const hipExternalMemoryMipmappedArrayDesc * mipmapDesc);
typedef hipError_t (*__hipDeviceGetAttribute_t)(int * pi, hipDeviceAttribute_t attr, int deviceId);
typedef hipError_t (*__hipIpcGetEventHandle_t)(hipIpcEventHandle_t * handle, hipEvent_t event);
typedef hipError_t (*__hipTexRefGetArray_t)(hipArray_t * pArray, const textureReference * texRef);
typedef hipError_t (*__hipModuleLaunchKernel_t)(hipFunction_t f, unsigned int gridDimX, unsigned int gridDimY, unsigned int gridDimZ, unsigned int blockDimX, unsigned int blockDimY, unsigned int blockDimZ, unsigned int sharedMemBytes, hipStream_t stream, void ** kernelParams, void ** extra);
typedef hipError_t (*__hipGraphNodeGetType_t)(hipGraphNode_t node, hipGraphNodeType * pType);
typedef hipError_t (*__hipGraphExecEventRecordNodeSetEvent_t)(hipGraphExec_t hGraphExec, hipGraphNode_t hNode, hipEvent_t event);
typedef hipError_t (*__hipGraphAddExternalSemaphoresSignalNode_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, const hipExternalSemaphoreSignalNodeParams * nodeParams);
typedef hipError_t (*__hipMemset2DAsync_t)(void * dst, size_t pitch, int value, size_t width, size_t height, hipStream_t stream);
typedef hipError_t (*__hipMemcpyWithStream_t)(void * dst, const void * src, size_t sizeBytes, hipMemcpyKind kind, hipStream_t stream);
typedef hipError_t (*__hipBindTextureToArray_t)(const textureReference * tex, hipArray_const_t array, const hipChannelFormatDesc * desc);
typedef hipError_t (*__hipStreamBeginCaptureToGraph_t)(hipStream_t stream, hipGraph_t graph, const hipGraphNode_t * dependencies, const hipGraphEdgeData * dependencyData, size_t numDependencies, hipStreamCaptureMode mode);
typedef hipError_t (*__hipGraphGetEdges_t)(hipGraph_t graph, hipGraphNode_t * from, hipGraphNode_t * to, size_t * numEdges);
typedef hipError_t (*__hipStreamWriteValue64_t)(hipStream_t stream, void * ptr, uint64_t value, unsigned int flags);
typedef hipError_t (*__hipGraphicsResourceGetMappedPointer_t)(void ** devPtr, size_t * size, hipGraphicsResource_t resource);
typedef hipError_t (*__hipDeviceCanAccessPeer_t)(int * canAccessPeer, int deviceId, int peerDeviceId);
typedef hipError_t (*__hipGraphMemcpyNodeSetParams_t)(hipGraphNode_t node, const hipMemcpy3DParms * pNodeParams);
typedef hipError_t (*__hipMemcpyHtoDAsync_t)(hipDeviceptr_t dst, void * src, size_t sizeBytes, hipStream_t stream);
typedef hipError_t (*__hipGetLastError_t)();
typedef hipError_t (*__hipModuleOccupancyMaxActiveBlocksPerMultiprocessor_t)(int * numBlocks, hipFunction_t f, int blockSize, size_t dynSharedMemPerBlk);
typedef hipError_t (*__hipGraphicsUnregisterResource_t)(hipGraphicsResource_t resource);
typedef hipError_t (*__hipGraphAddExternalSemaphoresWaitNode_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, const hipExternalSemaphoreWaitNodeParams * nodeParams);
typedef void (*____hipGetPCH_t)(const char ** pch, unsigned int * size);
typedef hipError_t (*__hipEventCreate_t)(hipEvent_t * event);
typedef hipError_t (*__hipStreamCreateWithPriority_t)(hipStream_t * stream, unsigned int flags, int priority);
typedef hipError_t (*__hipModuleLaunchCooperativeKernel_t)(hipFunction_t f, unsigned int gridDimX, unsigned int gridDimY, unsigned int gridDimZ, unsigned int blockDimX, unsigned int blockDimY, unsigned int blockDimZ, unsigned int sharedMemBytes, hipStream_t stream, void ** kernelParams);
typedef hipError_t (*__hipGraphMemAllocNodeGetParams_t)(hipGraphNode_t node, hipMemAllocNodeParams * pNodeParams);
typedef hipError_t (*__hipMemAddressFree_t)(void * devPtr, size_t size);
typedef hipError_t (*__hipCtxCreate_t)(hipCtx_t * ctx, unsigned int flags, hipDevice_t device);
typedef hipError_t (*__hipCtxGetCacheConfig_t)(hipFuncCache_t * cacheConfig);
typedef hipError_t (*__hipStreamSynchronize_t)(hipStream_t stream);
typedef const char * (*__amd_dbgapi_get_build_name_t)();
typedef hipError_t (*__hipArray3DGetDescriptor_t)(HIP_ARRAY3D_DESCRIPTOR * pArrayDescriptor, hipArray_t array);
typedef hipError_t (*__hipTexRefGetFilterMode_t)(enum hipTextureFilterMode * pfm, const textureReference * texRef);
typedef hipError_t (*__hipMalloc3DArray_t)(hipArray_t * array, const struct hipChannelFormatDesc * desc, struct hipExtent extent, unsigned int flags);
typedef hipError_t (*__hipGraphExecUpdate_t)(hipGraphExec_t hGraphExec, hipGraph_t hGraph, hipGraphNode_t * hErrorNode_out, hipGraphExecUpdateResult * updateResult_out);
typedef hipError_t (*__hipEventRecord_t)(hipEvent_t event, hipStream_t stream);
typedef hipError_t (*__hipMemcpy2DFromArray_t)(void * dst, size_t dpitch, hipArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, hipMemcpyKind kind);
typedef hipError_t (*__hipGraphUpload_t)(hipGraphExec_t graphExec, hipStream_t stream);
typedef hipError_t (*__hipTexRefSetFilterMode_t)(textureReference * texRef, enum hipTextureFilterMode fm);
typedef hipError_t (*__hipTexRefGetAddressMode_t)(enum hipTextureAddressMode * pam, const textureReference * texRef, int dim);
typedef hipError_t (*__hipDeviceGetStreamPriorityRange_t)(int * leastPriority, int * greatestPriority);
typedef hipError_t (*__hipModuleLoadData_t)(hipModule_t * module, const void * image);
typedef hipError_t (*__hipStreamWaitValue64_t)(hipStream_t stream, void * ptr, uint64_t value, unsigned int flags, uint64_t mask);
typedef hipError_t (*__hipMallocPitch_t)(void ** ptr, size_t * pitch, size_t width, size_t height);
typedef hipError_t (*__hipDeviceTotalMem_t)(size_t * bytes, hipDevice_t device);
typedef hipError_t (*__hipMemPoolTrimTo_t)(hipMemPool_t mem_pool, size_t min_bytes_to_hold);
typedef hipError_t (*__hipDeviceGetUuid_t)(hipUUID * uuid, hipDevice_t device);
typedef hipError_t (*__hipDevicePrimaryCtxReset_t)(hipDevice_t dev);
typedef hipError_t (*__hipGraphExecExternalSemaphoresSignalNodeSetParams_t)(hipGraphExec_t hGraphExec, hipGraphNode_t hNode, const hipExternalSemaphoreSignalNodeParams * nodeParams);
typedef hipError_t (*__hipExtLaunchMultiKernelMultiDevice_t)(hipLaunchParams * launchParamsList, int numDevices, unsigned int flags);
typedef hipError_t (*__hipMemsetD8Async_t)(hipDeviceptr_t dest, unsigned char value, size_t count, hipStream_t stream);
typedef hipError_t (*__hipDrvGraphAddMemsetNode_t)(hipGraphNode_t * phGraphNode, hipGraph_t hGraph, const hipGraphNode_t * dependencies, size_t numDependencies, const HIP_MEMSET_NODE_PARAMS * memsetParams, hipCtx_t ctx);
typedef hipError_t (*__hipGraphMemcpyNodeSetParamsFromSymbol_t)(hipGraphNode_t node, void * dst, const void * symbol, size_t count, size_t offset, hipMemcpyKind kind);
typedef hipError_t (*__hipGetTextureObjectTextureDesc_t)(hipTextureDesc * pTexDesc, hipTextureObject_t textureObject);
typedef hipError_t (*__hipMalloc_t)(void ** ptr, size_t size);
typedef hipError_t (*__hipDeviceSetGraphMemAttribute_t)(int device, hipGraphMemAttributeType attr, void * value);
typedef hipError_t (*__hipGraphExternalSemaphoresWaitNodeGetParams_t)(hipGraphNode_t hNode, hipExternalSemaphoreWaitNodeParams * params_out);
typedef hipError_t (*__hipMemcpy2DToArray_spt_t)(hipArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind);
typedef hipError_t (*__hipArrayGetDescriptor_t)(HIP_ARRAY_DESCRIPTOR * pArrayDescriptor, hipArray_t array);
typedef hipError_t (*__hipTexRefGetMipMappedArray_t)(hipMipmappedArray_t * pArray, const textureReference * texRef);
typedef hipError_t (*__hipMemRangeGetAttributes_t)(void ** data, size_t * data_sizes, hipMemRangeAttribute * attributes, size_t num_attributes, const void * dev_ptr, size_t count);
typedef hipError_t (*__hipArrayGetInfo_t)(hipChannelFormatDesc * desc, hipExtent * extent, unsigned int * flags, hipArray_t array);
typedef hipError_t (*__hipMemAdvise_t)(const void * dev_ptr, size_t count, hipMemoryAdvise advice, int device);
typedef hipError_t (*__hipTexRefSetBorderColor_t)(textureReference * texRef, float * pBorderColor);
typedef hipError_t (*__hipExtMallocWithFlags_t)(void ** ptr, size_t sizeBytes, unsigned int flags);
typedef hipError_t (*__hipMemAllocHost_t)(void ** ptr, size_t size);
typedef hipError_t (*__hipGraphAddHostNode_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, const hipHostNodeParams * pNodeParams);
typedef hipError_t (*__hipGraphExecMemcpyNodeSetParams_t)(hipGraphExec_t hGraphExec, hipGraphNode_t node, hipMemcpy3DParms * pNodeParams);
typedef hipError_t (*__hipFuncGetAttributes_t)(struct hipFuncAttributes * attr, const void * func);
typedef hipError_t (*__hipMemset3D_t)(hipPitchedPtr pitchedDevPtr, int value, hipExtent extent);
typedef hipError_t (*__hipTexRefGetMaxAnisotropy_t)(int * pmaxAnsio, const textureReference * texRef);
typedef hipError_t (*__hipGraphAddMemFreeNode_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, void * dev_ptr);
typedef hipError_t (*__hipMemcpyFromArray_spt_t)(void * dst, hipArray_const_t src, size_t wOffsetSrc, size_t hOffset, size_t count, hipMemcpyKind kind);
typedef hipError_t (*__hipMemcpy3D_spt_t)(const struct hipMemcpy3DParms * p);
typedef hipError_t (*__hipStreamBeginCapture_t)(hipStream_t stream, hipStreamCaptureMode mode);
typedef hipError_t (*__hipMemcpy2DToArrayAsync_t)(hipArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind, hipStream_t stream);
typedef hipError_t (*__hipCtxSetSharedMemConfig_t)(hipSharedMemConfig config);
typedef hipError_t (*__hipSetDevice_t)(int deviceId);
typedef hipError_t (*__hipMemcpyDtoH_t)(void * dst, hipDeviceptr_t src, size_t sizeBytes);
typedef hipError_t (*__hipMemcpyAsync_t)(void * dst, const void * src, size_t sizeBytes, hipMemcpyKind kind, hipStream_t stream);
typedef hipError_t (*__hipMemCreate_t)(hipMemGenericAllocationHandle_t * handle, size_t size, const hipMemAllocationProp * prop, unsigned long long flags);
typedef hipError_t (*__hipFuncSetSharedMemConfig_t)(const void * func, hipSharedMemConfig config);
typedef hipError_t (*__hipGraphExecChildGraphNodeSetParams_t)(hipGraphExec_t hGraphExec, hipGraphNode_t node, hipGraph_t childGraph);
typedef struct hipChannelFormatDesc (*__hipCreateChannelDesc_t)(int x, int y, int z, int w, enum hipChannelFormatKind f);
typedef hipError_t (*__hipFreeHost_t)(void * ptr);
typedef hipError_t (*__hipTexObjectGetResourceDesc_t)(HIP_RESOURCE_DESC * pResDesc, hipTextureObject_t texObject);
typedef hipError_t (*__hipMemcpy2DToArrayAsync_spt_t)(hipArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, hipMemcpyKind kind, hipStream_t stream);
typedef hipError_t (*__hipLaunchCooperativeKernelMultiDevice_t)(hipLaunchParams * launchParamsList, int numDevices, unsigned int flags);
typedef hipError_t (*__hipHostGetFlags_t)(unsigned int * flagsPtr, void * hostPtr);
typedef hipError_t (*__hipMemSetAccess_t)(void * ptr, size_t size, const hipMemAccessDesc * desc, size_t count);
typedef hipError_t (*__hipStreamUpdateCaptureDependencies_t)(hipStream_t stream, hipGraphNode_t * dependencies, size_t numDependencies, unsigned int flags);
typedef hipError_t (*__hipGraphExternalSemaphoresSignalNodeGetParams_t)(hipGraphNode_t hNode, hipExternalSemaphoreSignalNodeParams * params_out);
typedef hipError_t (*__hipTexRefSetFormat_t)(textureReference * texRef, hipArray_Format fmt, int NumPackedComponents);
typedef hipError_t (*__hipDeviceReset_t)();
typedef hipError_t (*__hipMemPoolImportFromShareableHandle_t)(hipMemPool_t * mem_pool, void * shared_handle, hipMemAllocationHandleType handle_type, unsigned int flags);
typedef hipError_t (*__hipCtxGetApiVersion_t)(hipCtx_t ctx, int * apiVersion);
typedef hipError_t (*__hipDeviceGetDefaultMemPool_t)(hipMemPool_t * mem_pool, int device);
typedef hipError_t (*__hipStreamGetFlags_spt_t)(hipStream_t stream, unsigned int * flags);
typedef hipError_t (*__hipMemcpyFromSymbolAsync_spt_t)(void * dst, const void * symbol, size_t sizeBytes, size_t offset, hipMemcpyKind kind, hipStream_t stream);
typedef hipError_t (*__hipTexObjectGetResourceViewDesc_t)(HIP_RESOURCE_VIEW_DESC * pResViewDesc, hipTextureObject_t texObject);
typedef hipError_t (*__hipGetDevice_t)(int * deviceId);
typedef hipError_t (*__hipGetSymbolAddress_t)(void ** devPtr, const void * symbol);
typedef hipError_t (*__hipMemcpyToSymbol_spt_t)(const void * symbol, const void * src, size_t sizeBytes, size_t offset, hipMemcpyKind kind);
typedef hipError_t (*__hipGraphAddMemcpyNode1D_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, void * dst, const void * src, size_t count, hipMemcpyKind kind);
typedef hipError_t (*__hipDestroyExternalSemaphore_t)(hipExternalSemaphore_t extSem);
typedef hipError_t (*__hipIpcOpenMemHandle_t)(void ** devPtr, hipIpcMemHandle_t handle, unsigned int flags);
typedef hipError_t (*__hipCtxDestroy_t)(hipCtx_t ctx);
typedef hipError_t (*__hipStreamGetCaptureInfo_v2_t)(hipStream_t stream, hipStreamCaptureStatus * captureStatus_out, unsigned long long * id_out, hipGraph_t * graph_out, const hipGraphNode_t ** dependencies_out, size_t * numDependencies_out);
typedef int (*__hipGetStreamDeviceId_t)(hipStream_t stream);
typedef hipError_t (*__hipImportExternalMemory_t)(hipExternalMemory_t * extMem_out, const hipExternalMemoryHandleDesc * memHandleDesc);
typedef hipError_t (*__hipGraphExecKernelNodeSetParams_t)(hipGraphExec_t hGraphExec, hipGraphNode_t node, const hipKernelNodeParams * pNodeParams);
typedef hipError_t (*__hipStreamEndCapture_spt_t)(hipStream_t stream, hipGraph_t * pGraph);
typedef hipError_t (*__hipGraphExecMemcpyNodeSetParamsFromSymbol_t)(hipGraphExec_t hGraphExec, hipGraphNode_t node, void * dst, const void * symbol, size_t count, size_t offset, hipMemcpyKind kind);
typedef hipError_t (*__hipCreateTextureObject_t)(hipTextureObject_t * pTexObject, const hipResourceDesc * pResDesc, const hipTextureDesc * pTexDesc, const struct hipResourceViewDesc * pResViewDesc);
typedef hipError_t (*__hipModuleLoadDataEx_t)(hipModule_t * module, const void * image, unsigned int numOptions, hipJitOption * options, void ** optionValues);
typedef hipError_t (*____hipPopCallConfiguration_t)(dim3 * gridDim, dim3 * blockDim, size_t * sharedMem, hipStream_t * stream);
typedef hipError_t (*__hipMemcpyFromSymbol_t)(void * dst, const void * symbol, size_t sizeBytes, size_t offset, hipMemcpyKind kind);
typedef hipError_t (*__hipMemPoolGetAttribute_t)(hipMemPool_t mem_pool, hipMemPoolAttr attr, void * value);
typedef hipError_t (*__hipGraphAddMemcpyNode_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, const hipMemcpy3DParms * pCopyParams);
typedef const char * (*__hipKernelNameRefByPtr_t)(const void * hostFunction, hipStream_t stream);
typedef hipError_t (*__hipIpcOpenEventHandle_t)(hipEvent_t * event, hipIpcEventHandle_t handle);
typedef hipError_t (*__hipGetFuncBySymbol_t)(hipFunction_t * functionPtr, const void * symbolPtr);
typedef hipError_t (*__hipGraphAddEventRecordNode_t)(hipGraphNode_t * pGraphNode, hipGraph_t graph, const hipGraphNode_t * pDependencies, size_t numDependencies, hipEvent_t event);
typedef hipError_t (*__hipModuleLaunchCooperativeKernelMultiDevice_t)(hipFunctionLaunchParams * launchParamsList, unsigned int numDevices, unsigned int flags);
typedef hipError_t (*__hipGraphMemsetNodeSetParams_t)(hipGraphNode_t node, const hipMemsetParams * pNodeParams);
typedef hipError_t (*__hipSignalExternalSemaphoresAsync_t)(const hipExternalSemaphore_t * extSemArray, const hipExternalSemaphoreSignalParams * paramsArray, unsigned int numExtSems, hipStream_t stream);
typedef hipError_t (*__hipModuleLoad_t)(hipModule_t * module, const char * fname); 

#endif // HIP_PROFILED_FUNCTIONS_H