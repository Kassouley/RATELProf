/** THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY THE GILDA TOOL.
 * DO NOT MODIFY UNLESS YOU KNOW WHAT YOU ARE DOING.
 * ANY CHANGES MAY BE OVERWRITTEN BY SUBSEQUENT RUNS OF GILDA. 
 */
 

#ifndef HSA_PROFILED_FUNCTIONS_H 
#define HSA_PROFILED_FUNCTIONS_H 

#include "hsa/hsa.h"
#include "hsa/hsa_ext_amd.h" 

// HSA API Function Prototype
hsa_status_t i_hsa_amd_svm_attributes_set(void * ptr, size_t size, hsa_amd_svm_attribute_pair_t * attribute_list, size_t attribute_count);
hsa_status_t i_hsa_amd_queue_set_priority(hsa_queue_t * queue, hsa_amd_queue_priority_t priority);
hsa_status_t i_hsa_queue_destroy(hsa_queue_t * queue);
uint64_t i_hsa_queue_cas_write_index_relaxed(const hsa_queue_t * queue, uint64_t expected, uint64_t value);
hsa_status_t i_hsa_amd_svm_prefetch_async(void * ptr, size_t size, hsa_agent_t agent, uint32_t num_dep_signals, const hsa_signal_t * dep_signals, hsa_signal_t completion_signal);
void i_hsa_signal_xor_release(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_amd_vmem_address_reserve(void ** va, size_t size, uint64_t address, uint64_t flags);
hsa_status_t i_hsa_amd_vmem_get_access(void * va, hsa_access_permission_t * perms, hsa_agent_t agent_handle);
hsa_status_t i_hsa_amd_agent_iterate_memory_pools(hsa_agent_t agent, hsa_status_t (*callback)(hsa_amd_memory_pool_t, void *), void * data);
hsa_status_t i_hsa_amd_signal_create(hsa_signal_value_t initial_value, uint32_t num_consumers, const hsa_agent_t * consumers, uint64_t attributes, hsa_signal_t * signal);
void i_hsa_signal_xor_acquire(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_amd_profiling_get_async_copy_time(hsa_signal_t signal, hsa_amd_profiling_async_copy_time_t * time);
hsa_status_t i_hsa_amd_image_create(hsa_agent_t agent, const hsa_ext_image_descriptor_t * image_descriptor, const hsa_amd_image_descriptor_t * image_layout, const void * image_data, hsa_access_permission_t access_permission, hsa_ext_image_t * image);
hsa_status_t i_hsa_ven_amd_pcs_iterate_configuration(hsa_agent_t agent, hsa_ven_amd_pcs_iterate_configuration_callback_t configuration_callback, void * callback_data);
hsa_status_t i_hsa_ext_image_export(hsa_agent_t agent, hsa_ext_image_t src_image, void * dst_memory, size_t dst_row_pitch, size_t dst_slice_pitch, const hsa_ext_image_region_t * image_region);
void i_hsa_signal_and_screlease(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_code_object_reader_destroy(hsa_code_object_reader_t code_object_reader);
hsa_status_t i_hsa_amd_vmem_export_shareable_handle(int * dmabuf_fd, hsa_amd_vmem_alloc_handle_t handle, uint64_t flags);
hsa_status_t i_hsa_memory_copy(void * dst, const void * src, size_t size);
void i_hsa_queue_store_write_index_release(const hsa_queue_t * queue, uint64_t value);
hsa_status_t i_hsa_amd_coherency_set_type(hsa_agent_t agent, hsa_amd_coherency_type_t type);
hsa_status_t i_hsa_amd_ipc_signal_create(hsa_signal_t signal, hsa_amd_ipc_signal_t * handle);
uint32_t i_hsa_amd_signal_wait_any(uint32_t signal_count, hsa_signal_t * signals, hsa_signal_condition_t * conds, hsa_signal_value_t * values, uint64_t timeout_hint, hsa_wait_state_t wait_hint, hsa_signal_value_t * satisfying_value);
hsa_status_t i_hsa_amd_pointer_info(const void * ptr, hsa_amd_pointer_info_t * info, void *(*alloc)(size_t), uint32_t * num_agents_accessible, hsa_agent_t ** accessible);
void i_hsa_signal_xor_screlease(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_code_object_deserialize(void * serialized_code_object, size_t serialized_code_object_size, const char * options, hsa_code_object_t * code_object);
void i_hsa_queue_store_write_index_screlease(const hsa_queue_t * queue, uint64_t value);
hsa_status_t i_hsa_amd_memory_pool_can_migrate(hsa_amd_memory_pool_t src_memory_pool, hsa_amd_memory_pool_t dst_memory_pool, _Bool * result);
hsa_status_t i_hsa_executable_symbol_get_info(hsa_executable_symbol_t executable_symbol, hsa_executable_symbol_info_t attribute, void * value);
void i_hsa_signal_silent_store_screlease(hsa_signal_t signal, hsa_signal_value_t value);
uint64_t i_hsa_queue_cas_write_index_acq_rel(const hsa_queue_t * queue, uint64_t expected, uint64_t value);
hsa_signal_value_t i_hsa_signal_exchange_acquire(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_isa_get_info(hsa_isa_t isa, hsa_isa_info_t attribute, uint32_t index, void * value);
hsa_status_t i_hsa_executable_get_symbol_by_name(hsa_executable_t executable, const char * symbol_name, const hsa_agent_t * agent, hsa_executable_symbol_t * symbol);
hsa_status_t i_hsa_ext_sampler_destroy(hsa_agent_t agent, hsa_ext_sampler_t sampler);
hsa_status_t i_hsa_amd_async_function(void (*callback)(void *), void * arg);
hsa_status_t i_hsa_agent_iterate_isas(hsa_agent_t agent, hsa_status_t (*callback)(hsa_isa_t, void *), void * data);
hsa_signal_value_t i_hsa_signal_exchange_scacq_screl(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_signal_destroy(hsa_signal_t signal);
hsa_signal_value_t i_hsa_signal_load_relaxed(hsa_signal_t signal);
hsa_status_t i_hsa_amd_vmem_handle_release(hsa_amd_vmem_alloc_handle_t memory_handle);
void i_hsa_signal_add_screlease(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_executable_load_agent_code_object(hsa_executable_t executable, hsa_agent_t agent, hsa_code_object_reader_t code_object_reader, const char * options, hsa_loaded_code_object_t * loaded_code_object);
void i_hsa_signal_add_relaxed(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_amd_interop_map_buffer(uint32_t num_agents, hsa_agent_t * agents, int interop_handle, uint32_t flags, size_t * size, void ** ptr, size_t * metadata_size, const void ** metadata);
hsa_status_t i_hsa_status_string(hsa_status_t status, const char ** status_string);
uint64_t i_hsa_queue_load_write_index_scacquire(const hsa_queue_t * queue);
hsa_status_t i_hsa_agent_iterate_regions(hsa_agent_t agent, hsa_status_t (*callback)(hsa_region_t, void *), void * data);
hsa_status_t i_hsa_code_object_serialize(hsa_code_object_t code_object, hsa_status_t (*alloc_callback)(size_t, hsa_callback_data_t, void **), hsa_callback_data_t callback_data, const char * options, void ** serialized_code_object, size_t * serialized_code_object_size);
hsa_status_t i_hsa_ven_amd_pcs_start(hsa_ven_amd_pcs_t pc_sampling);
hsa_status_t i_hsa_amd_deregister_deallocation_callback(void * ptr, hsa_amd_deallocation_callback_t callback);
void i_hsa_signal_add_release(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_executable_validate_alt(hsa_executable_t executable, const char * options, uint32_t * result);
hsa_status_t i_hsa_amd_coherency_get_type(hsa_agent_t agent, hsa_amd_coherency_type_t * type);
void i_hsa_signal_subtract_relaxed(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_executable_get_symbol(hsa_executable_t executable, const char * module_name, const char * symbol_name, hsa_agent_t agent, int32_t call_convention, hsa_executable_symbol_t * symbol);
hsa_signal_value_t i_hsa_signal_exchange_relaxed(hsa_signal_t signal, hsa_signal_value_t value);
void i_hsa_signal_or_screlease(hsa_signal_t signal, hsa_signal_value_t value);
void i_hsa_signal_subtract_acquire(hsa_signal_t signal, hsa_signal_value_t value);
uint64_t i_hsa_queue_add_write_index_relaxed(const hsa_queue_t * queue, uint64_t value);
hsa_status_t i_hsa_ext_image_clear(hsa_agent_t agent, hsa_ext_image_t image, const void * data, const hsa_ext_image_region_t * image_region);
hsa_status_t i_hsa_signal_group_destroy(hsa_signal_group_t signal_group);
hsa_status_t i_hsa_amd_queue_cu_set_mask(const hsa_queue_t * queue, uint32_t num_cu_mask_count, const uint32_t * cu_mask);
hsa_status_t i_hsa_executable_create_alt(hsa_profile_t profile, hsa_default_float_rounding_mode_t default_float_rounding_mode, const char * options, hsa_executable_t * executable);
hsa_status_t i_hsa_amd_vmem_unmap(void * va, size_t size);
hsa_status_t i_hsa_amd_register_deallocation_callback(void * ptr, hsa_amd_deallocation_callback_t callback, void * user_data);
hsa_status_t i_hsa_isa_get_round_method(hsa_isa_t isa, hsa_fp_type_t fp_type, hsa_flush_mode_t flush_mode, hsa_round_method_t * round_method);
hsa_status_t i_hsa_signal_group_wait_any_scacquire(hsa_signal_group_t signal_group, const hsa_signal_condition_t * conditions, const hsa_signal_value_t * compare_values, hsa_wait_state_t wait_state_hint, hsa_signal_t * signal, hsa_signal_value_t * value);
hsa_status_t i_hsa_amd_spm_set_dest_buffer(hsa_agent_t preferred_agent, size_t size_in_bytes, uint32_t * timeout, uint32_t * size_copied, void * dest, _Bool * is_data_loss);
hsa_status_t i_hsa_executable_iterate_symbols(hsa_executable_t executable, hsa_status_t (*callback)(hsa_executable_t, hsa_executable_symbol_t, void *), void * data);
hsa_status_t i_hsa_extension_get_name(uint16_t extension, const char ** name);
hsa_status_t i_hsa_executable_agent_global_variable_define(hsa_executable_t executable, hsa_agent_t agent, const char * variable_name, void * address);
hsa_status_t i_hsa_amd_memory_pool_allocate(hsa_amd_memory_pool_t memory_pool, size_t size, uint32_t flags, void ** ptr);
hsa_status_t i_hsa_amd_agents_allow_access(uint32_t num_agents, const hsa_agent_t * agents, const uint32_t * flags, const void * ptr);
void i_hsa_signal_add_scacquire(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_wavefront_get_info(hsa_wavefront_t wavefront, hsa_wavefront_info_t attribute, void * value);
hsa_signal_value_t i_hsa_signal_wait_acquire(hsa_signal_t signal, hsa_signal_condition_t condition, hsa_signal_value_t compare_value, uint64_t timeout_hint, hsa_wait_state_t wait_state_hint);
uint64_t i_hsa_queue_add_write_index_scacq_screl(const hsa_queue_t * queue, uint64_t value);
hsa_status_t i_hsa_system_extension_supported(uint16_t extension, uint16_t version_major, uint16_t version_minor, _Bool * result);
void i_hsa_signal_add_acq_rel(hsa_signal_t signal, hsa_signal_value_t value);
void i_hsa_signal_add_scacq_screl(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_amd_memory_migrate(const void * ptr, hsa_amd_memory_pool_t memory_pool, uint32_t flags);
hsa_status_t i_hsa_executable_load_program_code_object(hsa_executable_t executable, hsa_code_object_reader_t code_object_reader, const char * options, hsa_loaded_code_object_t * loaded_code_object);
hsa_status_t i_hsa_agent_iterate_caches(hsa_agent_t agent, hsa_status_t (*callback)(hsa_cache_t, void *), void * data);
uint64_t i_hsa_queue_add_write_index_screlease(const hsa_queue_t * queue, uint64_t value);
hsa_status_t i_hsa_queue_inactivate(hsa_queue_t * queue);
uint64_t i_hsa_queue_load_read_index_scacquire(const hsa_queue_t * queue);
hsa_status_t i_hsa_amd_memory_pool_free(void * ptr);
void i_hsa_signal_or_scacq_screl(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_ext_image_get_capability_with_layout(hsa_agent_t agent, hsa_ext_image_geometry_t geometry, const hsa_ext_image_format_t * image_format, hsa_ext_image_data_layout_t image_data_layout, uint32_t * capability_mask);
hsa_signal_value_t i_hsa_signal_exchange_acq_rel(hsa_signal_t signal, hsa_signal_value_t value);
hsa_signal_value_t i_hsa_signal_exchange_screlease(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_amd_vmem_set_access(void * va, size_t size, const hsa_amd_memory_access_desc_t * desc, size_t desc_cnt);
hsa_status_t i_hsa_amd_vmem_get_alloc_properties_from_handle(hsa_amd_vmem_alloc_handle_t memory_handle, hsa_amd_memory_pool_t * pool, hsa_amd_memory_type_t * type);
hsa_status_t i_hsa_code_object_reader_create_from_file(hsa_file_t file, hsa_code_object_reader_t * code_object_reader);
hsa_signal_value_t i_hsa_signal_cas_release(hsa_signal_t signal, hsa_signal_value_t expected, hsa_signal_value_t value);
hsa_status_t i_hsa_iterate_agents(hsa_status_t (*callback)(hsa_agent_t, void *), void * data);
hsa_status_t i_hsa_executable_iterate_agent_symbols(hsa_executable_t executable, hsa_agent_t agent, hsa_status_t (*callback)(hsa_executable_t, hsa_agent_t, hsa_executable_symbol_t, void *), void * data);
hsa_status_t i_hsa_system_get_extension_table(uint16_t extension, uint16_t version_major, uint16_t version_minor, void * table);
hsa_signal_value_t i_hsa_signal_cas_scacquire(hsa_signal_t signal, hsa_signal_value_t expected, hsa_signal_value_t value);
hsa_status_t i_hsa_code_symbol_get_info(hsa_code_symbol_t code_symbol, hsa_code_symbol_info_t attribute, void * value);
uint64_t i_hsa_queue_load_read_index_relaxed(const hsa_queue_t * queue);
hsa_status_t i_hsa_amd_agent_memory_pool_get_info(hsa_agent_t agent, hsa_amd_memory_pool_t memory_pool, hsa_amd_agent_memory_pool_info_t attribute, void * value);
hsa_status_t i_hsa_amd_agent_set_async_scratch_limit(hsa_agent_t agent, size_t threshold);
void i_hsa_signal_silent_store_relaxed(hsa_signal_t signal, hsa_signal_value_t value);
hsa_signal_value_t i_hsa_signal_load_acquire(hsa_signal_t signal);
hsa_status_t i_hsa_amd_portable_export_dmabuf(const void * ptr, size_t size, int * dmabuf, uint64_t * offset);
uint64_t i_hsa_queue_load_write_index_acquire(const hsa_queue_t * queue);
void i_hsa_signal_subtract_screlease(hsa_signal_t signal, hsa_signal_value_t value);
uint64_t i_hsa_queue_add_write_index_release(const hsa_queue_t * queue, uint64_t value);
void i_hsa_signal_store_relaxed(hsa_signal_t signal, hsa_signal_value_t value);
uint64_t i_hsa_queue_load_read_index_acquire(const hsa_queue_t * queue);
void i_hsa_queue_store_read_index_screlease(const hsa_queue_t * queue, uint64_t value);
hsa_signal_value_t i_hsa_signal_cas_relaxed(hsa_signal_t signal, hsa_signal_value_t expected, hsa_signal_value_t value);
hsa_status_t i_hsa_ven_amd_pcs_flush(hsa_ven_amd_pcs_t pc_sampling);
hsa_status_t i_hsa_system_get_info(hsa_system_info_t attribute, void * value);
hsa_status_t i_hsa_queue_create(hsa_agent_t agent, uint32_t size, hsa_queue_type32_t type, void (*callback)(hsa_status_t, hsa_queue_t *, void *), void * data, uint32_t private_segment_size, uint32_t group_segment_size, hsa_queue_t ** queue);
hsa_status_t i_hsa_ext_image_import(hsa_agent_t agent, const void * src_memory, size_t src_row_pitch, size_t src_slice_pitch, hsa_ext_image_t dst_image, const hsa_ext_image_region_t * image_region);
void i_hsa_signal_and_release(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_amd_vmem_handle_create(hsa_amd_memory_pool_t pool, size_t size, hsa_amd_memory_type_t type, uint64_t flags, hsa_amd_vmem_alloc_handle_t * memory_handle);
void i_hsa_signal_and_acq_rel(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_region_get_info(hsa_region_t region, hsa_region_info_t attribute, void * value);
void i_hsa_signal_and_acquire(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_ven_amd_pcs_create(hsa_agent_t agent, hsa_ven_amd_pcs_method_kind_t method, hsa_ven_amd_pcs_units_t units, size_t interval, size_t latency, size_t buffer_size, hsa_ven_amd_pcs_data_ready_callback_t data_ready_callback, void * client_callback_data, hsa_ven_amd_pcs_t * pc_sampling);
hsa_status_t i_hsa_amd_queue_cu_get_mask(const hsa_queue_t * queue, uint32_t num_cu_mask_count, uint32_t * cu_mask);
hsa_status_t i_hsa_amd_signal_value_pointer(hsa_signal_t signal, volatile hsa_signal_value_t ** value_ptr);
hsa_status_t i_hsa_executable_global_variable_define(hsa_executable_t executable, const char * variable_name, void * address);
hsa_signal_value_t i_hsa_signal_exchange_scacquire(hsa_signal_t signal, hsa_signal_value_t value);
void i_hsa_signal_xor_acq_rel(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_signal_group_create(uint32_t num_signals, const hsa_signal_t * signals, uint32_t num_consumers, const hsa_agent_t * consumers, hsa_signal_group_t * signal_group);
hsa_status_t i_hsa_ext_image_create(hsa_agent_t agent, const hsa_ext_image_descriptor_t * image_descriptor, const void * image_data, hsa_access_permission_t access_permission, hsa_ext_image_t * image);
uint64_t i_hsa_queue_cas_write_index_acquire(const hsa_queue_t * queue, uint64_t expected, uint64_t value);
uint64_t i_hsa_queue_cas_write_index_scacq_screl(const hsa_queue_t * queue, uint64_t expected, uint64_t value);
hsa_status_t i_hsa_amd_image_get_info_max_dim(hsa_agent_t agent, hsa_agent_info_t attribute, void * value);
hsa_status_t i_hsa_amd_profiling_set_profiler_enabled(hsa_queue_t * queue, int enable);
hsa_status_t i_hsa_amd_profiling_async_copy_enable(_Bool enable);
hsa_status_t i_hsa_amd_vmem_map(void * va, size_t size, size_t in_offset, hsa_amd_vmem_alloc_handle_t memory_handle, uint64_t flags);
void i_hsa_signal_add_acquire(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_signal_group_wait_any_relaxed(hsa_signal_group_t signal_group, const hsa_signal_condition_t * conditions, const hsa_signal_value_t * compare_values, hsa_wait_state_t wait_state_hint, hsa_signal_t * signal, hsa_signal_value_t * value);
hsa_status_t i_hsa_isa_get_exception_policies(hsa_isa_t isa, hsa_profile_t profile, uint16_t * mask);
hsa_status_t i_hsa_amd_memory_pool_get_info(hsa_amd_memory_pool_t memory_pool, hsa_amd_memory_pool_info_t attribute, void * value);
hsa_status_t i_hsa_amd_memory_copy_engine_status(hsa_agent_t dst_agent, hsa_agent_t src_agent, uint32_t * engine_ids_mask);
hsa_status_t i_hsa_amd_svm_attributes_get(void * ptr, size_t size, hsa_amd_svm_attribute_pair_t * attribute_list, size_t attribute_count);
uint64_t i_hsa_queue_add_write_index_acquire(const hsa_queue_t * queue, uint64_t value);
hsa_status_t i_hsa_agent_get_info(hsa_agent_t agent, hsa_agent_info_t attribute, void * value);
hsa_status_t i_hsa_ven_amd_pcs_stop(hsa_ven_amd_pcs_t pc_sampling);
uint64_t i_hsa_queue_cas_write_index_screlease(const hsa_queue_t * queue, uint64_t expected, uint64_t value);
hsa_status_t i_hsa_signal_create(hsa_signal_value_t initial_value, uint32_t num_consumers, const hsa_agent_t * consumers, hsa_signal_t * signal);
hsa_status_t i_hsa_executable_destroy(hsa_executable_t executable);
hsa_status_t i_hsa_ext_image_create_with_layout(hsa_agent_t agent, const hsa_ext_image_descriptor_t * image_descriptor, const void * image_data, hsa_access_permission_t access_permission, hsa_ext_image_data_layout_t image_data_layout, size_t image_data_row_pitch, size_t image_data_slice_pitch, hsa_ext_image_t * image);
hsa_status_t i_hsa_amd_pointer_info_set_userdata(const void * ptr, void * userdata);
void i_hsa_signal_and_scacq_screl(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_executable_freeze(hsa_executable_t executable, const char * options);
hsa_status_t i_hsa_ven_amd_pcs_create_from_id(uint32_t pcs_id, hsa_agent_t agent, hsa_ven_amd_pcs_method_kind_t method, hsa_ven_amd_pcs_units_t units, size_t interval, size_t latency, size_t buffer_size, hsa_ven_amd_pcs_data_ready_callback_t data_ready_callback, void * client_callback_data, hsa_ven_amd_pcs_t * pc_sampling);
void i_hsa_signal_store_screlease(hsa_signal_t signal, hsa_signal_value_t value);
void i_hsa_signal_and_scacquire(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_amd_ipc_memory_detach(void * mapped_ptr);
void i_hsa_signal_xor_relaxed(hsa_signal_t signal, hsa_signal_value_t value);
void i_hsa_signal_subtract_scacquire(hsa_signal_t signal, hsa_signal_value_t value);
hsa_signal_value_t i_hsa_signal_wait_scacquire(hsa_signal_t signal, hsa_signal_condition_t condition, hsa_signal_value_t compare_value, uint64_t timeout_hint, hsa_wait_state_t wait_state_hint);
void i_hsa_signal_store_release(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_executable_create(hsa_profile_t profile, hsa_executable_state_t executable_state, const char * options, hsa_executable_t * executable);
uint64_t i_hsa_queue_add_write_index_acq_rel(const hsa_queue_t * queue, uint64_t value);
hsa_status_t i_hsa_memory_register(void * ptr, size_t size);
hsa_status_t i_hsa_code_object_get_symbol_from_name(hsa_code_object_t code_object, const char * module_name, const char * symbol_name, hsa_code_symbol_t * symbol);
hsa_status_t i_hsa_amd_profiling_convert_tick_to_system_domain(hsa_agent_t agent, uint64_t agent_tick, uint64_t * system_tick);
hsa_status_t i_hsa_agent_extension_supported(uint16_t extension, hsa_agent_t agent, uint16_t version_major, uint16_t version_minor, _Bool * result);
hsa_status_t i_hsa_amd_profiling_get_dispatch_time(hsa_agent_t agent, hsa_signal_t signal, hsa_amd_profiling_dispatch_time_t * time);
hsa_status_t i_hsa_amd_spm_acquire(hsa_agent_t preferred_agent);
void i_hsa_queue_store_write_index_relaxed(const hsa_queue_t * queue, uint64_t value);
hsa_signal_value_t i_hsa_signal_load_scacquire(hsa_signal_t signal);
void i_hsa_signal_subtract_scacq_screl(hsa_signal_t signal, hsa_signal_value_t value);
void i_hsa_signal_xor_scacq_screl(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_amd_vmem_retain_alloc_handle(hsa_amd_vmem_alloc_handle_t * memory_handle, void * addr);
hsa_status_t i_hsa_amd_memory_async_copy_rect(const hsa_pitched_ptr_t * dst, const hsa_dim3_t * dst_offset, const hsa_pitched_ptr_t * src, const hsa_dim3_t * src_offset, const hsa_dim3_t * range, hsa_agent_t copy_agent, hsa_amd_copy_direction_t dir, uint32_t num_dep_signals, const hsa_signal_t * dep_signals, hsa_signal_t completion_signal);
hsa_status_t i_hsa_isa_get_info_alt(hsa_isa_t isa, hsa_isa_info_t attribute, void * value);
hsa_status_t i_hsa_system_get_major_extension_table(uint16_t extension, uint16_t version_major, size_t table_length, void * table);
void i_hsa_signal_or_acq_rel(hsa_signal_t signal, hsa_signal_value_t value);
void i_hsa_signal_and_relaxed(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_memory_deregister(void * ptr, size_t size);
hsa_status_t i_hsa_amd_vmem_address_free(void * va, size_t size);
hsa_status_t i_hsa_amd_ipc_signal_attach(const hsa_amd_ipc_signal_t * handle, hsa_signal_t * signal);
hsa_status_t i_hsa_ext_image_get_capability(hsa_agent_t agent, hsa_ext_image_geometry_t geometry, const hsa_ext_image_format_t * image_format, uint32_t * capability_mask);
hsa_status_t i_hsa_code_object_iterate_symbols(hsa_code_object_t code_object, hsa_status_t (*callback)(hsa_code_object_t, hsa_code_symbol_t, void *), void * data);
hsa_status_t i_hsa_ext_image_destroy(hsa_agent_t agent, hsa_ext_image_t image);
void i_hsa_signal_subtract_release(hsa_signal_t signal, hsa_signal_value_t value);
hsa_signal_value_t i_hsa_signal_exchange_release(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_amd_memory_lock(void * host_ptr, size_t size, hsa_agent_t * agents, int num_agent, void ** agent_ptr);
hsa_status_t i_hsa_shut_down();
uint64_t i_hsa_queue_load_write_index_relaxed(const hsa_queue_t * queue);
uint64_t i_hsa_queue_cas_write_index_scacquire(const hsa_queue_t * queue, uint64_t expected, uint64_t value);
hsa_status_t i_hsa_amd_ipc_memory_create(void * ptr, size_t len, hsa_amd_ipc_memory_t * handle);
hsa_status_t i_hsa_agent_get_exception_policies(hsa_agent_t agent, hsa_profile_t profile, uint16_t * mask);
hsa_status_t i_hsa_amd_portable_close_dmabuf(int dmabuf);
hsa_status_t i_hsa_code_object_get_symbol(hsa_code_object_t code_object, const char * symbol_name, hsa_code_symbol_t * symbol);
hsa_status_t i_hsa_isa_from_name(const char * name, hsa_isa_t * isa);
void i_hsa_queue_store_read_index_release(const hsa_queue_t * queue, uint64_t value);
hsa_status_t i_hsa_ext_image_data_get_info(hsa_agent_t agent, const hsa_ext_image_descriptor_t * image_descriptor, hsa_access_permission_t access_permission, hsa_ext_image_data_info_t * image_data_info);
hsa_status_t i_hsa_isa_iterate_wavefronts(hsa_isa_t isa, hsa_status_t (*callback)(hsa_wavefront_t, void *), void * data);
hsa_signal_value_t i_hsa_signal_cas_acquire(hsa_signal_t signal, hsa_signal_value_t expected, hsa_signal_value_t value);
hsa_status_t i_hsa_executable_get_info(hsa_executable_t executable, hsa_executable_info_t attribute, void * value);
hsa_status_t i_hsa_amd_register_system_event_handler(hsa_amd_system_event_callback_t callback, void * data);
hsa_status_t i_hsa_amd_memory_unlock(void * host_ptr);
hsa_status_t i_hsa_init();
hsa_status_t i_hsa_amd_queue_get_info(hsa_queue_t * queue, hsa_queue_info_attribute_t attribute, void * value);
void i_hsa_signal_or_relaxed(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_cache_get_info(hsa_cache_t cache, hsa_cache_info_t attribute, void * value);
void i_hsa_signal_or_release(hsa_signal_t signal, hsa_signal_value_t value);
void i_hsa_signal_or_scacquire(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_executable_validate(hsa_executable_t executable, uint32_t * result);
hsa_status_t i_hsa_amd_memory_async_copy(void * dst, hsa_agent_t dst_agent, const void * src, hsa_agent_t src_agent, size_t size, uint32_t num_dep_signals, const hsa_signal_t * dep_signals, hsa_signal_t completion_signal);
hsa_status_t i_hsa_code_object_get_info(hsa_code_object_t code_object, hsa_code_object_info_t attribute, void * value);
hsa_status_t i_hsa_code_object_destroy(hsa_code_object_t code_object);
hsa_status_t i_hsa_agent_major_extension_supported(uint16_t extension, hsa_agent_t agent, uint16_t version_major, uint16_t * version_minor, _Bool * result);
hsa_status_t i_hsa_amd_ipc_memory_attach(const hsa_amd_ipc_memory_t * handle, size_t len, uint32_t num_agents, const hsa_agent_t * mapping_agents, void ** mapped_ptr);
hsa_signal_value_t i_hsa_signal_cas_acq_rel(hsa_signal_t signal, hsa_signal_value_t expected, hsa_signal_value_t value);
hsa_status_t i_hsa_memory_free(void * ptr);
hsa_status_t i_hsa_amd_memory_lock_to_pool(void * host_ptr, size_t size, hsa_agent_t * agents, int num_agent, hsa_amd_memory_pool_t pool, uint32_t flags, void ** agent_ptr);
hsa_status_t i_hsa_isa_compatible(hsa_isa_t code_object_isa, hsa_isa_t agent_isa, _Bool * result);
hsa_status_t i_hsa_code_object_reader_create_from_memory(const void * code_object, size_t size, hsa_code_object_reader_t * code_object_reader);
hsa_status_t i_hsa_soft_queue_create(hsa_region_t region, uint32_t size, hsa_queue_type32_t type, uint32_t features, hsa_signal_t doorbell_signal, hsa_queue_t ** queue);
hsa_status_t i_hsa_ext_sampler_create(hsa_agent_t agent, const hsa_ext_sampler_descriptor_t * sampler_descriptor, hsa_ext_sampler_t * sampler);
hsa_status_t i_hsa_system_major_extension_supported(uint16_t extension, uint16_t version_major, uint16_t * version_minor, _Bool * result);
hsa_status_t i_hsa_amd_signal_async_handler(hsa_signal_t signal, hsa_signal_condition_t cond, hsa_signal_value_t value, hsa_amd_signal_handler handler, void * arg);
hsa_status_t i_hsa_ext_image_copy(hsa_agent_t agent, hsa_ext_image_t src_image, const hsa_dim3_t * src_offset, hsa_ext_image_t dst_image, const hsa_dim3_t * dst_offset, const hsa_dim3_t * range);
hsa_status_t i_hsa_amd_vmem_import_shareable_handle(int dmabuf_fd, hsa_amd_vmem_alloc_handle_t * handle);
void i_hsa_signal_subtract_acq_rel(hsa_signal_t signal, hsa_signal_value_t value);
uint64_t i_hsa_queue_cas_write_index_release(const hsa_queue_t * queue, uint64_t expected, uint64_t value);
uint64_t i_hsa_queue_add_write_index_scacquire(const hsa_queue_t * queue, uint64_t value);
void i_hsa_signal_or_acquire(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_ext_image_data_get_info_with_layout(hsa_agent_t agent, const hsa_ext_image_descriptor_t * image_descriptor, hsa_access_permission_t access_permission, hsa_ext_image_data_layout_t image_data_layout, size_t image_data_row_pitch, size_t image_data_slice_pitch, hsa_ext_image_data_info_t * image_data_info);
hsa_status_t i_hsa_amd_memory_fill(void * ptr, uint32_t value, size_t count);
hsa_status_t i_hsa_amd_vmem_address_reserve_align(void ** va, size_t size, uint64_t address, uint64_t alignment, uint64_t flags);
hsa_status_t i_hsa_executable_readonly_variable_define(hsa_executable_t executable, hsa_agent_t agent, const char * variable_name, void * address);
hsa_status_t i_hsa_executable_iterate_program_symbols(hsa_executable_t executable, hsa_status_t (*callback)(hsa_executable_t, hsa_executable_symbol_t, void *), void * data);
hsa_status_t i_hsa_amd_memory_async_copy_on_engine(void * dst, hsa_agent_t dst_agent, const void * src, hsa_agent_t src_agent, size_t size, uint32_t num_dep_signals, const hsa_signal_t * dep_signals, hsa_signal_t completion_signal, hsa_amd_sdma_engine_id_t engine_id, _Bool force_copy_on_sdma);
hsa_status_t i_hsa_amd_interop_unmap_buffer(void * ptr);
hsa_signal_value_t i_hsa_signal_cas_screlease(hsa_signal_t signal, hsa_signal_value_t expected, hsa_signal_value_t value);
void i_hsa_signal_xor_scacquire(hsa_signal_t signal, hsa_signal_value_t value);
hsa_status_t i_hsa_memory_allocate(hsa_region_t region, size_t size, void ** ptr);
hsa_signal_value_t i_hsa_signal_cas_scacq_screl(hsa_signal_t signal, hsa_signal_value_t expected, hsa_signal_value_t value);
void i_hsa_queue_store_read_index_relaxed(const hsa_queue_t * queue, uint64_t value);
hsa_status_t i_hsa_amd_spm_release(hsa_agent_t preferred_agent);
hsa_status_t i_hsa_memory_assign_agent(void * ptr, hsa_agent_t agent, hsa_access_permission_t access);
hsa_signal_value_t i_hsa_signal_wait_relaxed(hsa_signal_t signal, hsa_signal_condition_t condition, hsa_signal_value_t compare_value, uint64_t timeout_hint, hsa_wait_state_t wait_state_hint);
hsa_status_t i_hsa_ven_amd_pcs_destroy(hsa_ven_amd_pcs_t pc_sampling);
hsa_status_t i_hsa_executable_load_code_object(hsa_executable_t executable, hsa_agent_t agent, hsa_code_object_t code_object, const char * options); 

// HSA Functions Types
typedef hsa_status_t (*__hsa_amd_svm_attributes_set_t)(void * ptr, size_t size, hsa_amd_svm_attribute_pair_t * attribute_list, size_t attribute_count);
typedef hsa_status_t (*__hsa_amd_queue_set_priority_t)(hsa_queue_t * queue, hsa_amd_queue_priority_t priority);
typedef hsa_status_t (*__hsa_queue_destroy_t)(hsa_queue_t * queue);
typedef uint64_t (*__hsa_queue_cas_write_index_relaxed_t)(const hsa_queue_t * queue, uint64_t expected, uint64_t value);
typedef hsa_status_t (*__hsa_amd_svm_prefetch_async_t)(void * ptr, size_t size, hsa_agent_t agent, uint32_t num_dep_signals, const hsa_signal_t * dep_signals, hsa_signal_t completion_signal);
typedef void (*__hsa_signal_xor_release_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_amd_vmem_address_reserve_t)(void ** va, size_t size, uint64_t address, uint64_t flags);
typedef hsa_status_t (*__hsa_amd_vmem_get_access_t)(void * va, hsa_access_permission_t * perms, hsa_agent_t agent_handle);
typedef hsa_status_t (*__hsa_amd_agent_iterate_memory_pools_t)(hsa_agent_t agent, hsa_status_t (*callback)(hsa_amd_memory_pool_t, void *), void * data);
typedef hsa_status_t (*__hsa_amd_signal_create_t)(hsa_signal_value_t initial_value, uint32_t num_consumers, const hsa_agent_t * consumers, uint64_t attributes, hsa_signal_t * signal);
typedef void (*__hsa_signal_xor_acquire_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_amd_profiling_get_async_copy_time_t)(hsa_signal_t signal, hsa_amd_profiling_async_copy_time_t * time);
typedef hsa_status_t (*__hsa_amd_image_create_t)(hsa_agent_t agent, const hsa_ext_image_descriptor_t * image_descriptor, const hsa_amd_image_descriptor_t * image_layout, const void * image_data, hsa_access_permission_t access_permission, hsa_ext_image_t * image);
typedef hsa_status_t (*__hsa_ven_amd_pcs_iterate_configuration_t)(hsa_agent_t agent, hsa_ven_amd_pcs_iterate_configuration_callback_t configuration_callback, void * callback_data);
typedef hsa_status_t (*__hsa_ext_image_export_t)(hsa_agent_t agent, hsa_ext_image_t src_image, void * dst_memory, size_t dst_row_pitch, size_t dst_slice_pitch, const hsa_ext_image_region_t * image_region);
typedef void (*__hsa_signal_and_screlease_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_code_object_reader_destroy_t)(hsa_code_object_reader_t code_object_reader);
typedef hsa_status_t (*__hsa_amd_vmem_export_shareable_handle_t)(int * dmabuf_fd, hsa_amd_vmem_alloc_handle_t handle, uint64_t flags);
typedef hsa_status_t (*__hsa_memory_copy_t)(void * dst, const void * src, size_t size);
typedef void (*__hsa_queue_store_write_index_release_t)(const hsa_queue_t * queue, uint64_t value);
typedef hsa_status_t (*__hsa_amd_coherency_set_type_t)(hsa_agent_t agent, hsa_amd_coherency_type_t type);
typedef hsa_status_t (*__hsa_amd_ipc_signal_create_t)(hsa_signal_t signal, hsa_amd_ipc_signal_t * handle);
typedef uint32_t (*__hsa_amd_signal_wait_any_t)(uint32_t signal_count, hsa_signal_t * signals, hsa_signal_condition_t * conds, hsa_signal_value_t * values, uint64_t timeout_hint, hsa_wait_state_t wait_hint, hsa_signal_value_t * satisfying_value);
typedef hsa_status_t (*__hsa_amd_pointer_info_t)(const void * ptr, hsa_amd_pointer_info_t * info, void *(*alloc)(size_t), uint32_t * num_agents_accessible, hsa_agent_t ** accessible);
typedef void (*__hsa_signal_xor_screlease_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_code_object_deserialize_t)(void * serialized_code_object, size_t serialized_code_object_size, const char * options, hsa_code_object_t * code_object);
typedef void (*__hsa_queue_store_write_index_screlease_t)(const hsa_queue_t * queue, uint64_t value);
typedef hsa_status_t (*__hsa_amd_memory_pool_can_migrate_t)(hsa_amd_memory_pool_t src_memory_pool, hsa_amd_memory_pool_t dst_memory_pool, _Bool * result);
typedef hsa_status_t (*__hsa_executable_symbol_get_info_t)(hsa_executable_symbol_t executable_symbol, hsa_executable_symbol_info_t attribute, void * value);
typedef void (*__hsa_signal_silent_store_screlease_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef uint64_t (*__hsa_queue_cas_write_index_acq_rel_t)(const hsa_queue_t * queue, uint64_t expected, uint64_t value);
typedef hsa_signal_value_t (*__hsa_signal_exchange_acquire_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_isa_get_info_t)(hsa_isa_t isa, hsa_isa_info_t attribute, uint32_t index, void * value);
typedef hsa_status_t (*__hsa_executable_get_symbol_by_name_t)(hsa_executable_t executable, const char * symbol_name, const hsa_agent_t * agent, hsa_executable_symbol_t * symbol);
typedef hsa_status_t (*__hsa_ext_sampler_destroy_t)(hsa_agent_t agent, hsa_ext_sampler_t sampler);
typedef hsa_status_t (*__hsa_amd_async_function_t)(void (*callback)(void *), void * arg);
typedef hsa_status_t (*__hsa_agent_iterate_isas_t)(hsa_agent_t agent, hsa_status_t (*callback)(hsa_isa_t, void *), void * data);
typedef hsa_signal_value_t (*__hsa_signal_exchange_scacq_screl_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_signal_destroy_t)(hsa_signal_t signal);
typedef hsa_signal_value_t (*__hsa_signal_load_relaxed_t)(hsa_signal_t signal);
typedef hsa_status_t (*__hsa_amd_vmem_handle_release_t)(hsa_amd_vmem_alloc_handle_t memory_handle);
typedef void (*__hsa_signal_add_screlease_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_executable_load_agent_code_object_t)(hsa_executable_t executable, hsa_agent_t agent, hsa_code_object_reader_t code_object_reader, const char * options, hsa_loaded_code_object_t * loaded_code_object);
typedef void (*__hsa_signal_add_relaxed_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_amd_interop_map_buffer_t)(uint32_t num_agents, hsa_agent_t * agents, int interop_handle, uint32_t flags, size_t * size, void ** ptr, size_t * metadata_size, const void ** metadata);
typedef hsa_status_t (*__hsa_status_string_t)(hsa_status_t status, const char ** status_string);
typedef uint64_t (*__hsa_queue_load_write_index_scacquire_t)(const hsa_queue_t * queue);
typedef hsa_status_t (*__hsa_agent_iterate_regions_t)(hsa_agent_t agent, hsa_status_t (*callback)(hsa_region_t, void *), void * data);
typedef hsa_status_t (*__hsa_code_object_serialize_t)(hsa_code_object_t code_object, hsa_status_t (*alloc_callback)(size_t, hsa_callback_data_t, void **), hsa_callback_data_t callback_data, const char * options, void ** serialized_code_object, size_t * serialized_code_object_size);
typedef hsa_status_t (*__hsa_ven_amd_pcs_start_t)(hsa_ven_amd_pcs_t pc_sampling);
typedef hsa_status_t (*__hsa_amd_deregister_deallocation_callback_t)(void * ptr, hsa_amd_deallocation_callback_t callback);
typedef void (*__hsa_signal_add_release_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_executable_validate_alt_t)(hsa_executable_t executable, const char * options, uint32_t * result);
typedef hsa_status_t (*__hsa_amd_coherency_get_type_t)(hsa_agent_t agent, hsa_amd_coherency_type_t * type);
typedef void (*__hsa_signal_subtract_relaxed_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_executable_get_symbol_t)(hsa_executable_t executable, const char * module_name, const char * symbol_name, hsa_agent_t agent, int32_t call_convention, hsa_executable_symbol_t * symbol);
typedef hsa_signal_value_t (*__hsa_signal_exchange_relaxed_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef void (*__hsa_signal_or_screlease_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef void (*__hsa_signal_subtract_acquire_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef uint64_t (*__hsa_queue_add_write_index_relaxed_t)(const hsa_queue_t * queue, uint64_t value);
typedef hsa_status_t (*__hsa_ext_image_clear_t)(hsa_agent_t agent, hsa_ext_image_t image, const void * data, const hsa_ext_image_region_t * image_region);
typedef hsa_status_t (*__hsa_signal_group_destroy_t)(hsa_signal_group_t signal_group);
typedef hsa_status_t (*__hsa_amd_queue_cu_set_mask_t)(const hsa_queue_t * queue, uint32_t num_cu_mask_count, const uint32_t * cu_mask);
typedef hsa_status_t (*__hsa_executable_create_alt_t)(hsa_profile_t profile, hsa_default_float_rounding_mode_t default_float_rounding_mode, const char * options, hsa_executable_t * executable);
typedef hsa_status_t (*__hsa_amd_vmem_unmap_t)(void * va, size_t size);
typedef hsa_status_t (*__hsa_amd_register_deallocation_callback_t)(void * ptr, hsa_amd_deallocation_callback_t callback, void * user_data);
typedef hsa_status_t (*__hsa_isa_get_round_method_t)(hsa_isa_t isa, hsa_fp_type_t fp_type, hsa_flush_mode_t flush_mode, hsa_round_method_t * round_method);
typedef hsa_status_t (*__hsa_signal_group_wait_any_scacquire_t)(hsa_signal_group_t signal_group, const hsa_signal_condition_t * conditions, const hsa_signal_value_t * compare_values, hsa_wait_state_t wait_state_hint, hsa_signal_t * signal, hsa_signal_value_t * value);
typedef hsa_status_t (*__hsa_amd_spm_set_dest_buffer_t)(hsa_agent_t preferred_agent, size_t size_in_bytes, uint32_t * timeout, uint32_t * size_copied, void * dest, _Bool * is_data_loss);
typedef hsa_status_t (*__hsa_executable_iterate_symbols_t)(hsa_executable_t executable, hsa_status_t (*callback)(hsa_executable_t, hsa_executable_symbol_t, void *), void * data);
typedef hsa_status_t (*__hsa_extension_get_name_t)(uint16_t extension, const char ** name);
typedef hsa_status_t (*__hsa_executable_agent_global_variable_define_t)(hsa_executable_t executable, hsa_agent_t agent, const char * variable_name, void * address);
typedef hsa_status_t (*__hsa_amd_memory_pool_allocate_t)(hsa_amd_memory_pool_t memory_pool, size_t size, uint32_t flags, void ** ptr);
typedef hsa_status_t (*__hsa_amd_agents_allow_access_t)(uint32_t num_agents, const hsa_agent_t * agents, const uint32_t * flags, const void * ptr);
typedef void (*__hsa_signal_add_scacquire_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_wavefront_get_info_t)(hsa_wavefront_t wavefront, hsa_wavefront_info_t attribute, void * value);
typedef hsa_signal_value_t (*__hsa_signal_wait_acquire_t)(hsa_signal_t signal, hsa_signal_condition_t condition, hsa_signal_value_t compare_value, uint64_t timeout_hint, hsa_wait_state_t wait_state_hint);
typedef uint64_t (*__hsa_queue_add_write_index_scacq_screl_t)(const hsa_queue_t * queue, uint64_t value);
typedef hsa_status_t (*__hsa_system_extension_supported_t)(uint16_t extension, uint16_t version_major, uint16_t version_minor, _Bool * result);
typedef void (*__hsa_signal_add_acq_rel_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef void (*__hsa_signal_add_scacq_screl_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_amd_memory_migrate_t)(const void * ptr, hsa_amd_memory_pool_t memory_pool, uint32_t flags);
typedef hsa_status_t (*__hsa_executable_load_program_code_object_t)(hsa_executable_t executable, hsa_code_object_reader_t code_object_reader, const char * options, hsa_loaded_code_object_t * loaded_code_object);
typedef hsa_status_t (*__hsa_agent_iterate_caches_t)(hsa_agent_t agent, hsa_status_t (*callback)(hsa_cache_t, void *), void * data);
typedef uint64_t (*__hsa_queue_add_write_index_screlease_t)(const hsa_queue_t * queue, uint64_t value);
typedef hsa_status_t (*__hsa_queue_inactivate_t)(hsa_queue_t * queue);
typedef uint64_t (*__hsa_queue_load_read_index_scacquire_t)(const hsa_queue_t * queue);
typedef hsa_status_t (*__hsa_amd_memory_pool_free_t)(void * ptr);
typedef void (*__hsa_signal_or_scacq_screl_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_ext_image_get_capability_with_layout_t)(hsa_agent_t agent, hsa_ext_image_geometry_t geometry, const hsa_ext_image_format_t * image_format, hsa_ext_image_data_layout_t image_data_layout, uint32_t * capability_mask);
typedef hsa_signal_value_t (*__hsa_signal_exchange_acq_rel_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_signal_value_t (*__hsa_signal_exchange_screlease_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_amd_vmem_set_access_t)(void * va, size_t size, const hsa_amd_memory_access_desc_t * desc, size_t desc_cnt);
typedef hsa_status_t (*__hsa_amd_vmem_get_alloc_properties_from_handle_t)(hsa_amd_vmem_alloc_handle_t memory_handle, hsa_amd_memory_pool_t * pool, hsa_amd_memory_type_t * type);
typedef hsa_status_t (*__hsa_code_object_reader_create_from_file_t)(hsa_file_t file, hsa_code_object_reader_t * code_object_reader);
typedef hsa_signal_value_t (*__hsa_signal_cas_release_t)(hsa_signal_t signal, hsa_signal_value_t expected, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_iterate_agents_t)(hsa_status_t (*callback)(hsa_agent_t, void *), void * data);
typedef hsa_status_t (*__hsa_executable_iterate_agent_symbols_t)(hsa_executable_t executable, hsa_agent_t agent, hsa_status_t (*callback)(hsa_executable_t, hsa_agent_t, hsa_executable_symbol_t, void *), void * data);
typedef hsa_status_t (*__hsa_system_get_extension_table_t)(uint16_t extension, uint16_t version_major, uint16_t version_minor, void * table);
typedef hsa_signal_value_t (*__hsa_signal_cas_scacquire_t)(hsa_signal_t signal, hsa_signal_value_t expected, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_code_symbol_get_info_t)(hsa_code_symbol_t code_symbol, hsa_code_symbol_info_t attribute, void * value);
typedef uint64_t (*__hsa_queue_load_read_index_relaxed_t)(const hsa_queue_t * queue);
typedef hsa_status_t (*__hsa_amd_agent_memory_pool_get_info_t)(hsa_agent_t agent, hsa_amd_memory_pool_t memory_pool, hsa_amd_agent_memory_pool_info_t attribute, void * value);
typedef hsa_status_t (*__hsa_amd_agent_set_async_scratch_limit_t)(hsa_agent_t agent, size_t threshold);
typedef void (*__hsa_signal_silent_store_relaxed_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_signal_value_t (*__hsa_signal_load_acquire_t)(hsa_signal_t signal);
typedef hsa_status_t (*__hsa_amd_portable_export_dmabuf_t)(const void * ptr, size_t size, int * dmabuf, uint64_t * offset);
typedef uint64_t (*__hsa_queue_load_write_index_acquire_t)(const hsa_queue_t * queue);
typedef void (*__hsa_signal_subtract_screlease_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef uint64_t (*__hsa_queue_add_write_index_release_t)(const hsa_queue_t * queue, uint64_t value);
typedef void (*__hsa_signal_store_relaxed_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef uint64_t (*__hsa_queue_load_read_index_acquire_t)(const hsa_queue_t * queue);
typedef void (*__hsa_queue_store_read_index_screlease_t)(const hsa_queue_t * queue, uint64_t value);
typedef hsa_signal_value_t (*__hsa_signal_cas_relaxed_t)(hsa_signal_t signal, hsa_signal_value_t expected, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_ven_amd_pcs_flush_t)(hsa_ven_amd_pcs_t pc_sampling);
typedef hsa_status_t (*__hsa_system_get_info_t)(hsa_system_info_t attribute, void * value);
typedef hsa_status_t (*__hsa_queue_create_t)(hsa_agent_t agent, uint32_t size, hsa_queue_type32_t type, void (*callback)(hsa_status_t, hsa_queue_t *, void *), void * data, uint32_t private_segment_size, uint32_t group_segment_size, hsa_queue_t ** queue);
typedef hsa_status_t (*__hsa_ext_image_import_t)(hsa_agent_t agent, const void * src_memory, size_t src_row_pitch, size_t src_slice_pitch, hsa_ext_image_t dst_image, const hsa_ext_image_region_t * image_region);
typedef void (*__hsa_signal_and_release_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_amd_vmem_handle_create_t)(hsa_amd_memory_pool_t pool, size_t size, hsa_amd_memory_type_t type, uint64_t flags, hsa_amd_vmem_alloc_handle_t * memory_handle);
typedef void (*__hsa_signal_and_acq_rel_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_region_get_info_t)(hsa_region_t region, hsa_region_info_t attribute, void * value);
typedef void (*__hsa_signal_and_acquire_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_ven_amd_pcs_create_t)(hsa_agent_t agent, hsa_ven_amd_pcs_method_kind_t method, hsa_ven_amd_pcs_units_t units, size_t interval, size_t latency, size_t buffer_size, hsa_ven_amd_pcs_data_ready_callback_t data_ready_callback, void * client_callback_data, hsa_ven_amd_pcs_t * pc_sampling);
typedef hsa_status_t (*__hsa_amd_queue_cu_get_mask_t)(const hsa_queue_t * queue, uint32_t num_cu_mask_count, uint32_t * cu_mask);
typedef hsa_status_t (*__hsa_amd_signal_value_pointer_t)(hsa_signal_t signal, volatile hsa_signal_value_t ** value_ptr);
typedef hsa_status_t (*__hsa_executable_global_variable_define_t)(hsa_executable_t executable, const char * variable_name, void * address);
typedef hsa_signal_value_t (*__hsa_signal_exchange_scacquire_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef void (*__hsa_signal_xor_acq_rel_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_signal_group_create_t)(uint32_t num_signals, const hsa_signal_t * signals, uint32_t num_consumers, const hsa_agent_t * consumers, hsa_signal_group_t * signal_group);
typedef hsa_status_t (*__hsa_ext_image_create_t)(hsa_agent_t agent, const hsa_ext_image_descriptor_t * image_descriptor, const void * image_data, hsa_access_permission_t access_permission, hsa_ext_image_t * image);
typedef uint64_t (*__hsa_queue_cas_write_index_acquire_t)(const hsa_queue_t * queue, uint64_t expected, uint64_t value);
typedef uint64_t (*__hsa_queue_cas_write_index_scacq_screl_t)(const hsa_queue_t * queue, uint64_t expected, uint64_t value);
typedef hsa_status_t (*__hsa_amd_image_get_info_max_dim_t)(hsa_agent_t agent, hsa_agent_info_t attribute, void * value);
typedef hsa_status_t (*__hsa_amd_profiling_set_profiler_enabled_t)(hsa_queue_t * queue, int enable);
typedef hsa_status_t (*__hsa_amd_profiling_async_copy_enable_t)(_Bool enable);
typedef hsa_status_t (*__hsa_amd_vmem_map_t)(void * va, size_t size, size_t in_offset, hsa_amd_vmem_alloc_handle_t memory_handle, uint64_t flags);
typedef void (*__hsa_signal_add_acquire_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_signal_group_wait_any_relaxed_t)(hsa_signal_group_t signal_group, const hsa_signal_condition_t * conditions, const hsa_signal_value_t * compare_values, hsa_wait_state_t wait_state_hint, hsa_signal_t * signal, hsa_signal_value_t * value);
typedef hsa_status_t (*__hsa_isa_get_exception_policies_t)(hsa_isa_t isa, hsa_profile_t profile, uint16_t * mask);
typedef hsa_status_t (*__hsa_amd_memory_pool_get_info_t)(hsa_amd_memory_pool_t memory_pool, hsa_amd_memory_pool_info_t attribute, void * value);
typedef hsa_status_t (*__hsa_amd_memory_copy_engine_status_t)(hsa_agent_t dst_agent, hsa_agent_t src_agent, uint32_t * engine_ids_mask);
typedef hsa_status_t (*__hsa_amd_svm_attributes_get_t)(void * ptr, size_t size, hsa_amd_svm_attribute_pair_t * attribute_list, size_t attribute_count);
typedef uint64_t (*__hsa_queue_add_write_index_acquire_t)(const hsa_queue_t * queue, uint64_t value);
typedef hsa_status_t (*__hsa_agent_get_info_t)(hsa_agent_t agent, hsa_agent_info_t attribute, void * value);
typedef hsa_status_t (*__hsa_ven_amd_pcs_stop_t)(hsa_ven_amd_pcs_t pc_sampling);
typedef uint64_t (*__hsa_queue_cas_write_index_screlease_t)(const hsa_queue_t * queue, uint64_t expected, uint64_t value);
typedef hsa_status_t (*__hsa_signal_create_t)(hsa_signal_value_t initial_value, uint32_t num_consumers, const hsa_agent_t * consumers, hsa_signal_t * signal);
typedef hsa_status_t (*__hsa_executable_destroy_t)(hsa_executable_t executable);
typedef hsa_status_t (*__hsa_ext_image_create_with_layout_t)(hsa_agent_t agent, const hsa_ext_image_descriptor_t * image_descriptor, const void * image_data, hsa_access_permission_t access_permission, hsa_ext_image_data_layout_t image_data_layout, size_t image_data_row_pitch, size_t image_data_slice_pitch, hsa_ext_image_t * image);
typedef hsa_status_t (*__hsa_amd_pointer_info_set_userdata_t)(const void * ptr, void * userdata);
typedef void (*__hsa_signal_and_scacq_screl_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_executable_freeze_t)(hsa_executable_t executable, const char * options);
typedef hsa_status_t (*__hsa_ven_amd_pcs_create_from_id_t)(uint32_t pcs_id, hsa_agent_t agent, hsa_ven_amd_pcs_method_kind_t method, hsa_ven_amd_pcs_units_t units, size_t interval, size_t latency, size_t buffer_size, hsa_ven_amd_pcs_data_ready_callback_t data_ready_callback, void * client_callback_data, hsa_ven_amd_pcs_t * pc_sampling);
typedef void (*__hsa_signal_store_screlease_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef void (*__hsa_signal_and_scacquire_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_amd_ipc_memory_detach_t)(void * mapped_ptr);
typedef void (*__hsa_signal_xor_relaxed_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef void (*__hsa_signal_subtract_scacquire_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_signal_value_t (*__hsa_signal_wait_scacquire_t)(hsa_signal_t signal, hsa_signal_condition_t condition, hsa_signal_value_t compare_value, uint64_t timeout_hint, hsa_wait_state_t wait_state_hint);
typedef void (*__hsa_signal_store_release_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_executable_create_t)(hsa_profile_t profile, hsa_executable_state_t executable_state, const char * options, hsa_executable_t * executable);
typedef uint64_t (*__hsa_queue_add_write_index_acq_rel_t)(const hsa_queue_t * queue, uint64_t value);
typedef hsa_status_t (*__hsa_memory_register_t)(void * ptr, size_t size);
typedef hsa_status_t (*__hsa_code_object_get_symbol_from_name_t)(hsa_code_object_t code_object, const char * module_name, const char * symbol_name, hsa_code_symbol_t * symbol);
typedef hsa_status_t (*__hsa_amd_profiling_convert_tick_to_system_domain_t)(hsa_agent_t agent, uint64_t agent_tick, uint64_t * system_tick);
typedef hsa_status_t (*__hsa_agent_extension_supported_t)(uint16_t extension, hsa_agent_t agent, uint16_t version_major, uint16_t version_minor, _Bool * result);
typedef hsa_status_t (*__hsa_amd_profiling_get_dispatch_time_t)(hsa_agent_t agent, hsa_signal_t signal, hsa_amd_profiling_dispatch_time_t * time);
typedef hsa_status_t (*__hsa_amd_spm_acquire_t)(hsa_agent_t preferred_agent);
typedef void (*__hsa_queue_store_write_index_relaxed_t)(const hsa_queue_t * queue, uint64_t value);
typedef hsa_signal_value_t (*__hsa_signal_load_scacquire_t)(hsa_signal_t signal);
typedef void (*__hsa_signal_subtract_scacq_screl_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef void (*__hsa_signal_xor_scacq_screl_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_amd_vmem_retain_alloc_handle_t)(hsa_amd_vmem_alloc_handle_t * memory_handle, void * addr);
typedef hsa_status_t (*__hsa_amd_memory_async_copy_rect_t)(const hsa_pitched_ptr_t * dst, const hsa_dim3_t * dst_offset, const hsa_pitched_ptr_t * src, const hsa_dim3_t * src_offset, const hsa_dim3_t * range, hsa_agent_t copy_agent, hsa_amd_copy_direction_t dir, uint32_t num_dep_signals, const hsa_signal_t * dep_signals, hsa_signal_t completion_signal);
typedef hsa_status_t (*__hsa_isa_get_info_alt_t)(hsa_isa_t isa, hsa_isa_info_t attribute, void * value);
typedef hsa_status_t (*__hsa_system_get_major_extension_table_t)(uint16_t extension, uint16_t version_major, size_t table_length, void * table);
typedef void (*__hsa_signal_or_acq_rel_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef void (*__hsa_signal_and_relaxed_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_memory_deregister_t)(void * ptr, size_t size);
typedef hsa_status_t (*__hsa_amd_vmem_address_free_t)(void * va, size_t size);
typedef hsa_status_t (*__hsa_amd_ipc_signal_attach_t)(const hsa_amd_ipc_signal_t * handle, hsa_signal_t * signal);
typedef hsa_status_t (*__hsa_ext_image_get_capability_t)(hsa_agent_t agent, hsa_ext_image_geometry_t geometry, const hsa_ext_image_format_t * image_format, uint32_t * capability_mask);
typedef hsa_status_t (*__hsa_code_object_iterate_symbols_t)(hsa_code_object_t code_object, hsa_status_t (*callback)(hsa_code_object_t, hsa_code_symbol_t, void *), void * data);
typedef hsa_status_t (*__hsa_ext_image_destroy_t)(hsa_agent_t agent, hsa_ext_image_t image);
typedef void (*__hsa_signal_subtract_release_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_signal_value_t (*__hsa_signal_exchange_release_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_amd_memory_lock_t)(void * host_ptr, size_t size, hsa_agent_t * agents, int num_agent, void ** agent_ptr);
typedef hsa_status_t (*__hsa_shut_down_t)();
typedef uint64_t (*__hsa_queue_load_write_index_relaxed_t)(const hsa_queue_t * queue);
typedef uint64_t (*__hsa_queue_cas_write_index_scacquire_t)(const hsa_queue_t * queue, uint64_t expected, uint64_t value);
typedef hsa_status_t (*__hsa_amd_ipc_memory_create_t)(void * ptr, size_t len, hsa_amd_ipc_memory_t * handle);
typedef hsa_status_t (*__hsa_agent_get_exception_policies_t)(hsa_agent_t agent, hsa_profile_t profile, uint16_t * mask);
typedef hsa_status_t (*__hsa_amd_portable_close_dmabuf_t)(int dmabuf);
typedef hsa_status_t (*__hsa_code_object_get_symbol_t)(hsa_code_object_t code_object, const char * symbol_name, hsa_code_symbol_t * symbol);
typedef hsa_status_t (*__hsa_isa_from_name_t)(const char * name, hsa_isa_t * isa);
typedef void (*__hsa_queue_store_read_index_release_t)(const hsa_queue_t * queue, uint64_t value);
typedef hsa_status_t (*__hsa_ext_image_data_get_info_t)(hsa_agent_t agent, const hsa_ext_image_descriptor_t * image_descriptor, hsa_access_permission_t access_permission, hsa_ext_image_data_info_t * image_data_info);
typedef hsa_status_t (*__hsa_isa_iterate_wavefronts_t)(hsa_isa_t isa, hsa_status_t (*callback)(hsa_wavefront_t, void *), void * data);
typedef hsa_signal_value_t (*__hsa_signal_cas_acquire_t)(hsa_signal_t signal, hsa_signal_value_t expected, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_executable_get_info_t)(hsa_executable_t executable, hsa_executable_info_t attribute, void * value);
typedef hsa_status_t (*__hsa_amd_register_system_event_handler_t)(hsa_amd_system_event_callback_t callback, void * data);
typedef hsa_status_t (*__hsa_amd_memory_unlock_t)(void * host_ptr);
typedef hsa_status_t (*__hsa_init_t)();
typedef hsa_status_t (*__hsa_amd_queue_get_info_t)(hsa_queue_t * queue, hsa_queue_info_attribute_t attribute, void * value);
typedef void (*__hsa_signal_or_relaxed_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_cache_get_info_t)(hsa_cache_t cache, hsa_cache_info_t attribute, void * value);
typedef void (*__hsa_signal_or_release_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef void (*__hsa_signal_or_scacquire_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_executable_validate_t)(hsa_executable_t executable, uint32_t * result);
typedef hsa_status_t (*__hsa_amd_memory_async_copy_t)(void * dst, hsa_agent_t dst_agent, const void * src, hsa_agent_t src_agent, size_t size, uint32_t num_dep_signals, const hsa_signal_t * dep_signals, hsa_signal_t completion_signal);
typedef hsa_status_t (*__hsa_code_object_get_info_t)(hsa_code_object_t code_object, hsa_code_object_info_t attribute, void * value);
typedef hsa_status_t (*__hsa_code_object_destroy_t)(hsa_code_object_t code_object);
typedef hsa_status_t (*__hsa_agent_major_extension_supported_t)(uint16_t extension, hsa_agent_t agent, uint16_t version_major, uint16_t * version_minor, _Bool * result);
typedef hsa_status_t (*__hsa_amd_ipc_memory_attach_t)(const hsa_amd_ipc_memory_t * handle, size_t len, uint32_t num_agents, const hsa_agent_t * mapping_agents, void ** mapped_ptr);
typedef hsa_signal_value_t (*__hsa_signal_cas_acq_rel_t)(hsa_signal_t signal, hsa_signal_value_t expected, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_memory_free_t)(void * ptr);
typedef hsa_status_t (*__hsa_amd_memory_lock_to_pool_t)(void * host_ptr, size_t size, hsa_agent_t * agents, int num_agent, hsa_amd_memory_pool_t pool, uint32_t flags, void ** agent_ptr);
typedef hsa_status_t (*__hsa_isa_compatible_t)(hsa_isa_t code_object_isa, hsa_isa_t agent_isa, _Bool * result);
typedef hsa_status_t (*__hsa_code_object_reader_create_from_memory_t)(const void * code_object, size_t size, hsa_code_object_reader_t * code_object_reader);
typedef hsa_status_t (*__hsa_soft_queue_create_t)(hsa_region_t region, uint32_t size, hsa_queue_type32_t type, uint32_t features, hsa_signal_t doorbell_signal, hsa_queue_t ** queue);
typedef hsa_status_t (*__hsa_ext_sampler_create_t)(hsa_agent_t agent, const hsa_ext_sampler_descriptor_t * sampler_descriptor, hsa_ext_sampler_t * sampler);
typedef hsa_status_t (*__hsa_system_major_extension_supported_t)(uint16_t extension, uint16_t version_major, uint16_t * version_minor, _Bool * result);
typedef hsa_status_t (*__hsa_amd_signal_async_handler_t)(hsa_signal_t signal, hsa_signal_condition_t cond, hsa_signal_value_t value, hsa_amd_signal_handler handler, void * arg);
typedef hsa_status_t (*__hsa_ext_image_copy_t)(hsa_agent_t agent, hsa_ext_image_t src_image, const hsa_dim3_t * src_offset, hsa_ext_image_t dst_image, const hsa_dim3_t * dst_offset, const hsa_dim3_t * range);
typedef hsa_status_t (*__hsa_amd_vmem_import_shareable_handle_t)(int dmabuf_fd, hsa_amd_vmem_alloc_handle_t * handle);
typedef void (*__hsa_signal_subtract_acq_rel_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef uint64_t (*__hsa_queue_cas_write_index_release_t)(const hsa_queue_t * queue, uint64_t expected, uint64_t value);
typedef uint64_t (*__hsa_queue_add_write_index_scacquire_t)(const hsa_queue_t * queue, uint64_t value);
typedef void (*__hsa_signal_or_acquire_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_ext_image_data_get_info_with_layout_t)(hsa_agent_t agent, const hsa_ext_image_descriptor_t * image_descriptor, hsa_access_permission_t access_permission, hsa_ext_image_data_layout_t image_data_layout, size_t image_data_row_pitch, size_t image_data_slice_pitch, hsa_ext_image_data_info_t * image_data_info);
typedef hsa_status_t (*__hsa_amd_memory_fill_t)(void * ptr, uint32_t value, size_t count);
typedef hsa_status_t (*__hsa_amd_vmem_address_reserve_align_t)(void ** va, size_t size, uint64_t address, uint64_t alignment, uint64_t flags);
typedef hsa_status_t (*__hsa_executable_readonly_variable_define_t)(hsa_executable_t executable, hsa_agent_t agent, const char * variable_name, void * address);
typedef hsa_status_t (*__hsa_executable_iterate_program_symbols_t)(hsa_executable_t executable, hsa_status_t (*callback)(hsa_executable_t, hsa_executable_symbol_t, void *), void * data);
typedef hsa_status_t (*__hsa_amd_memory_async_copy_on_engine_t)(void * dst, hsa_agent_t dst_agent, const void * src, hsa_agent_t src_agent, size_t size, uint32_t num_dep_signals, const hsa_signal_t * dep_signals, hsa_signal_t completion_signal, hsa_amd_sdma_engine_id_t engine_id, _Bool force_copy_on_sdma);
typedef hsa_status_t (*__hsa_amd_interop_unmap_buffer_t)(void * ptr);
typedef hsa_signal_value_t (*__hsa_signal_cas_screlease_t)(hsa_signal_t signal, hsa_signal_value_t expected, hsa_signal_value_t value);
typedef void (*__hsa_signal_xor_scacquire_t)(hsa_signal_t signal, hsa_signal_value_t value);
typedef hsa_status_t (*__hsa_memory_allocate_t)(hsa_region_t region, size_t size, void ** ptr);
typedef hsa_signal_value_t (*__hsa_signal_cas_scacq_screl_t)(hsa_signal_t signal, hsa_signal_value_t expected, hsa_signal_value_t value);
typedef void (*__hsa_queue_store_read_index_relaxed_t)(const hsa_queue_t * queue, uint64_t value);
typedef hsa_status_t (*__hsa_amd_spm_release_t)(hsa_agent_t preferred_agent);
typedef hsa_status_t (*__hsa_memory_assign_agent_t)(void * ptr, hsa_agent_t agent, hsa_access_permission_t access);
typedef hsa_signal_value_t (*__hsa_signal_wait_relaxed_t)(hsa_signal_t signal, hsa_signal_condition_t condition, hsa_signal_value_t compare_value, uint64_t timeout_hint, hsa_wait_state_t wait_state_hint);
typedef hsa_status_t (*__hsa_ven_amd_pcs_destroy_t)(hsa_ven_amd_pcs_t pc_sampling);
typedef hsa_status_t (*__hsa_executable_load_code_object_t)(hsa_executable_t executable, hsa_agent_t agent, hsa_code_object_t code_object, const char * options); 

#endif // HSA_PROFILED_FUNCTIONS_H